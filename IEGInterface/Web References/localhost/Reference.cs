//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4927
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.4927 版自动生成。
// 
#pragma warning disable 1591

namespace IEGInterface.localhost {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSMng", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CObject))]
    public partial class WSMng : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SelectTempCardChargRcdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTempICcardOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMasterTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealTvMoveFinishingOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSMGAcceptCommadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarHallsSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMovePathIsBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealEtvAvoidOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEtvCurrAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback InterfaceTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentSoundOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealCardMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateErrorInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasterTaskFromIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasterTaskOfTidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectSMGOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCTaskFromIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectLctFromAddrsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectByUserCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectSMGsOfTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSMGStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealCarEntranceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTskStatusDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealUpdateTaskStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealCarLeaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealCheckCarFailOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealCheckedCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealTVLoadFinishingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealTVUnLoadFinishingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealCompleteCTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealCompleteTVMoveFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealCompleteTVLoadFinishOperationCompleted;
        
        private System.Threading.SendOrPostCallback ODealEVUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSMGsWorkStatOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkingStatOfSMGOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMasterTaskOfHidOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectLctofInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectSpaceLctsAndBigLctsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpaceLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectStatusCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMasterTaskCountOfHidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentTaskOfSMGOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentMasterTaskOfSMGOperationCompleted;
        
        private System.Threading.SendOrPostCallback JudgeEqpHasErrorBitOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadErrorCodeDescpOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadErrorsDescpOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCurrErrCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetErrorCodesOfEqpIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateManageMasterTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManualCompleteMasterTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManualResetMasterTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectLocationOfIccdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManualOutLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManualInLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManualDisLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManualEnableLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManualTransposeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllSMGsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSMGAvailableOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetHallTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFixLocationAvailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertICCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateICCardStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperatorPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOperatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllOperatorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOprtOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertErrorLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectSysLogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectErrLogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteErrorLogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealOTempGetCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealCarDriveLeaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DealCarOffTracingOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCarOffTracingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTempCardFeeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFixCardCurrFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectTariffOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFixCardFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTempCardChargeLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTariffOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTariffOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTariffOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectFixCardChargRcdsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSMng() {
            this.Url = global::IEGInterface.Properties.Settings.Default.IEGInterface_localhost_WSMng;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SelectTempCardChargRcdsCompletedEventHandler SelectTempCardChargRcdsCompleted;
        
        /// <remarks/>
        public event CreateTempICcardOutCompletedEventHandler CreateTempICcardOutCompleted;
        
        /// <remarks/>
        public event GetAllMasterTaskCompletedEventHandler GetAllMasterTaskCompleted;
        
        /// <remarks/>
        public event DealTvMoveFinishingCompletedEventHandler DealTvMoveFinishingCompleted;
        
        /// <remarks/>
        public event CheckSMGAcceptCommadCompletedEventHandler CheckSMGAcceptCommadCompleted;
        
        /// <remarks/>
        public event GetCarHallsSpaceCompletedEventHandler GetCarHallsSpaceCompleted;
        
        /// <remarks/>
        public event CheckMovePathIsBlockCompletedEventHandler CheckMovePathIsBlockCompleted;
        
        /// <remarks/>
        public event DealEtvAvoidCompletedEventHandler DealEtvAvoidCompleted;
        
        /// <remarks/>
        public event UpdateEtvCurrAddressCompletedEventHandler UpdateEtvCurrAddressCompleted;
        
        /// <remarks/>
        public event InterfaceTemplateCompletedEventHandler InterfaceTemplateCompleted;
        
        /// <remarks/>
        public event AddClientCompletedEventHandler AddClientCompleted;
        
        /// <remarks/>
        public event RemoveClientCompletedEventHandler RemoveClientCompleted;
        
        /// <remarks/>
        public event GetCurrentSoundCompletedEventHandler GetCurrentSoundCompleted;
        
        /// <remarks/>
        public event DealCardMessageCompletedEventHandler DealCardMessageCompleted;
        
        /// <remarks/>
        public event UpdateStatCodesCompletedEventHandler UpdateStatCodesCompleted;
        
        /// <remarks/>
        public event UpdateErrorInfoCompletedEventHandler UpdateErrorInfoCompleted;
        
        /// <remarks/>
        public event GetMasterTaskFromIDCompletedEventHandler GetMasterTaskFromIDCompleted;
        
        /// <remarks/>
        public event GetMasterTaskOfTidCompletedEventHandler GetMasterTaskOfTidCompleted;
        
        /// <remarks/>
        public event SelectSMGCompletedEventHandler SelectSMGCompleted;
        
        /// <remarks/>
        public event GetCTaskFromIDCompletedEventHandler GetCTaskFromIDCompleted;
        
        /// <remarks/>
        public event SelectLctFromAddrsCompletedEventHandler SelectLctFromAddrsCompleted;
        
        /// <remarks/>
        public event SelectByUserCodeCompletedEventHandler SelectByUserCodeCompleted;
        
        /// <remarks/>
        public event SelectSMGsOfTypeCompletedEventHandler SelectSMGsOfTypeCompleted;
        
        /// <remarks/>
        public event UpdateSMGStatusCompletedEventHandler UpdateSMGStatusCompleted;
        
        /// <remarks/>
        public event DealCarEntranceCompletedEventHandler DealCarEntranceCompleted;
        
        /// <remarks/>
        public event SetTskStatusDetailCompletedEventHandler SetTskStatusDetailCompleted;
        
        /// <remarks/>
        public event DealUpdateTaskStatusCompletedEventHandler DealUpdateTaskStatusCompleted;
        
        /// <remarks/>
        public event DealCarLeaveCompletedEventHandler DealCarLeaveCompleted;
        
        /// <remarks/>
        public event DealCheckCarFailCompletedEventHandler DealCheckCarFailCompleted;
        
        /// <remarks/>
        public event DealCheckedCarCompletedEventHandler DealCheckedCarCompleted;
        
        /// <remarks/>
        public event DealTVLoadFinishingCompletedEventHandler DealTVLoadFinishingCompleted;
        
        /// <remarks/>
        public event DealTVUnLoadFinishingCompletedEventHandler DealTVUnLoadFinishingCompleted;
        
        /// <remarks/>
        public event DealCompleteCTaskCompletedEventHandler DealCompleteCTaskCompleted;
        
        /// <remarks/>
        public event DealCompleteTVMoveFinishCompletedEventHandler DealCompleteTVMoveFinishCompleted;
        
        /// <remarks/>
        public event DealCompleteTVLoadFinishCompletedEventHandler DealCompleteTVLoadFinishCompleted;
        
        /// <remarks/>
        public event ODealEVUpCompletedEventHandler ODealEVUpCompleted;
        
        /// <remarks/>
        public event UpdateSMGsWorkStatCompletedEventHandler UpdateSMGsWorkStatCompleted;
        
        /// <remarks/>
        public event UpdateWorkingStatOfSMGCompletedEventHandler UpdateWorkingStatOfSMGCompleted;
        
        /// <remarks/>
        public event GetAllMasterTaskOfHidCompletedEventHandler GetAllMasterTaskOfHidCompleted;
        
        /// <remarks/>
        public event CheckPasswordCompletedEventHandler CheckPasswordCompleted;
        
        /// <remarks/>
        public event SelectLctofInfoCompletedEventHandler SelectLctofInfoCompleted;
        
        /// <remarks/>
        public event SelectSpaceLctsAndBigLctsCompletedEventHandler SelectSpaceLctsAndBigLctsCompleted;
        
        /// <remarks/>
        public event GetSpaceLocationsCompletedEventHandler GetSpaceLocationsCompleted;
        
        /// <remarks/>
        public event SelectAllLocationsCompletedEventHandler SelectAllLocationsCompleted;
        
        /// <remarks/>
        public event SelectStatusCodesCompletedEventHandler SelectStatusCodesCompleted;
        
        /// <remarks/>
        public event GetMasterTaskCountOfHidCompletedEventHandler GetMasterTaskCountOfHidCompleted;
        
        /// <remarks/>
        public event GetCurrentTaskOfSMGCompletedEventHandler GetCurrentTaskOfSMGCompleted;
        
        /// <remarks/>
        public event GetCurrentMasterTaskOfSMGCompletedEventHandler GetCurrentMasterTaskOfSMGCompleted;
        
        /// <remarks/>
        public event JudgeEqpHasErrorBitCompletedEventHandler JudgeEqpHasErrorBitCompleted;
        
        /// <remarks/>
        public event LoadErrorCodeDescpCompletedEventHandler LoadErrorCodeDescpCompleted;
        
        /// <remarks/>
        public event LoadErrorsDescpCompletedEventHandler LoadErrorsDescpCompleted;
        
        /// <remarks/>
        public event SelectCurrErrCodesCompletedEventHandler SelectCurrErrCodesCompleted;
        
        /// <remarks/>
        public event GetErrorCodesOfEqpIDCompletedEventHandler GetErrorCodesOfEqpIDCompleted;
        
        /// <remarks/>
        public event CreateManageMasterTaskCompletedEventHandler CreateManageMasterTaskCompleted;
        
        /// <remarks/>
        public event ManualCompleteMasterTaskCompletedEventHandler ManualCompleteMasterTaskCompleted;
        
        /// <remarks/>
        public event ManualResetMasterTaskCompletedEventHandler ManualResetMasterTaskCompleted;
        
        /// <remarks/>
        public event SelectLocationOfIccdCompletedEventHandler SelectLocationOfIccdCompleted;
        
        /// <remarks/>
        public event ManualOutLocationCompletedEventHandler ManualOutLocationCompleted;
        
        /// <remarks/>
        public event ManualInLocationCompletedEventHandler ManualInLocationCompleted;
        
        /// <remarks/>
        public event ManualDisLocationCompletedEventHandler ManualDisLocationCompleted;
        
        /// <remarks/>
        public event ManualEnableLocationCompletedEventHandler ManualEnableLocationCompleted;
        
        /// <remarks/>
        public event ManualTransposeCompletedEventHandler ManualTransposeCompleted;
        
        /// <remarks/>
        public event SelectAllSMGsCompletedEventHandler SelectAllSMGsCompleted;
        
        /// <remarks/>
        public event UpdateSMGAvailableCompletedEventHandler UpdateSMGAvailableCompleted;
        
        /// <remarks/>
        public event SetHallTypeCompletedEventHandler SetHallTypeCompleted;
        
        /// <remarks/>
        public event SelectAllCustomerCompletedEventHandler SelectAllCustomerCompleted;
        
        /// <remarks/>
        public event CheckFixLocationAvailCompletedEventHandler CheckFixLocationAvailCompleted;
        
        /// <remarks/>
        public event UpdateCustomInfoCompletedEventHandler UpdateCustomInfoCompleted;
        
        /// <remarks/>
        public event InsertCustomerCompletedEventHandler InsertCustomerCompleted;
        
        /// <remarks/>
        public event DeleteCustomerCompletedEventHandler DeleteCustomerCompleted;
        
        /// <remarks/>
        public event InsertICCardCompletedEventHandler InsertICCardCompleted;
        
        /// <remarks/>
        public event UpdateICCardStatusCompletedEventHandler UpdateICCardStatusCompleted;
        
        /// <remarks/>
        public event UpdateOperatorPasswordCompletedEventHandler UpdateOperatorPasswordCompleted;
        
        /// <remarks/>
        public event InsertOperatorCompletedEventHandler InsertOperatorCompleted;
        
        /// <remarks/>
        public event SelectAllOperatorsCompletedEventHandler SelectAllOperatorsCompleted;
        
        /// <remarks/>
        public event DeleteOprtCompletedEventHandler DeleteOprtCompleted;
        
        /// <remarks/>
        public event InsertErrorLogCompletedEventHandler InsertErrorLogCompleted;
        
        /// <remarks/>
        public event SelectSysLogsCompletedEventHandler SelectSysLogsCompleted;
        
        /// <remarks/>
        public event SelectErrLogsCompletedEventHandler SelectErrLogsCompleted;
        
        /// <remarks/>
        public event DeleteErrorLogsCompletedEventHandler DeleteErrorLogsCompleted;
        
        /// <remarks/>
        public event DealOTempGetCarCompletedEventHandler DealOTempGetCarCompleted;
        
        /// <remarks/>
        public event DealCarDriveLeaveCompletedEventHandler DealCarDriveLeaveCompleted;
        
        /// <remarks/>
        public event DealCarOffTracingCompletedEventHandler DealCarOffTracingCompleted;
        
        /// <remarks/>
        public event CheckCarOffTracingCompletedEventHandler CheckCarOffTracingCompleted;
        
        /// <remarks/>
        public event GetTempCardFeeInfoCompletedEventHandler GetTempCardFeeInfoCompleted;
        
        /// <remarks/>
        public event GetFixCardCurrFeeCompletedEventHandler GetFixCardCurrFeeCompleted;
        
        /// <remarks/>
        public event SelectTariffCompletedEventHandler SelectTariffCompleted;
        
        /// <remarks/>
        public event SetFixCardFeeCompletedEventHandler SetFixCardFeeCompleted;
        
        /// <remarks/>
        public event InsertTempCardChargeLogCompletedEventHandler InsertTempCardChargeLogCompleted;
        
        /// <remarks/>
        public event DeleteTariffCompletedEventHandler DeleteTariffCompleted;
        
        /// <remarks/>
        public event InsertTariffCompletedEventHandler InsertTariffCompleted;
        
        /// <remarks/>
        public event UpdateTariffCompletedEventHandler UpdateTariffCompleted;
        
        /// <remarks/>
        public event SelectFixCardChargRcdsCompletedEventHandler SelectFixCardChargRcdsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectTempCardChargRcds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SelectTempCardChargRcds(int idx, string ctt, System.DateTime st, System.DateTime en, out System.Data.DataTable dt) {
            object[] results = this.Invoke("SelectTempCardChargRcds", new object[] {
                        idx,
                        ctt,
                        st,
                        en});
            dt = ((System.Data.DataTable)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SelectTempCardChargRcdsAsync(int idx, string ctt, System.DateTime st, System.DateTime en) {
            this.SelectTempCardChargRcdsAsync(idx, ctt, st, en, null);
        }
        
        /// <remarks/>
        public void SelectTempCardChargRcdsAsync(int idx, string ctt, System.DateTime st, System.DateTime en, object userState) {
            if ((this.SelectTempCardChargRcdsOperationCompleted == null)) {
                this.SelectTempCardChargRcdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectTempCardChargRcdsOperationCompleted);
            }
            this.InvokeAsync("SelectTempCardChargRcds", new object[] {
                        idx,
                        ctt,
                        st,
                        en}, this.SelectTempCardChargRcdsOperationCompleted, userState);
        }
        
        private void OnSelectTempCardChargRcdsOperationCompleted(object arg) {
            if ((this.SelectTempCardChargRcdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectTempCardChargRcdsCompleted(this, new SelectTempCardChargRcdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateTempICcardOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateTempICcardOut(string iccode, out int hnmb) {
            object[] results = this.Invoke("CreateTempICcardOut", new object[] {
                        iccode});
            hnmb = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTempICcardOutAsync(string iccode) {
            this.CreateTempICcardOutAsync(iccode, null);
        }
        
        /// <remarks/>
        public void CreateTempICcardOutAsync(string iccode, object userState) {
            if ((this.CreateTempICcardOutOperationCompleted == null)) {
                this.CreateTempICcardOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTempICcardOutOperationCompleted);
            }
            this.InvokeAsync("CreateTempICcardOut", new object[] {
                        iccode}, this.CreateTempICcardOutOperationCompleted, userState);
        }
        
        private void OnCreateTempICcardOutOperationCompleted(object arg) {
            if ((this.CreateTempICcardOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTempICcardOutCompleted(this, new CreateTempICcardOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMasterTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CMasterTask[] GetAllMasterTask() {
            object[] results = this.Invoke("GetAllMasterTask", new object[0]);
            return ((CMasterTask[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMasterTaskAsync() {
            this.GetAllMasterTaskAsync(null);
        }
        
        /// <remarks/>
        public void GetAllMasterTaskAsync(object userState) {
            if ((this.GetAllMasterTaskOperationCompleted == null)) {
                this.GetAllMasterTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMasterTaskOperationCompleted);
            }
            this.InvokeAsync("GetAllMasterTask", new object[0], this.GetAllMasterTaskOperationCompleted, userState);
        }
        
        private void OnGetAllMasterTaskOperationCompleted(object arg) {
            if ((this.GetAllMasterTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMasterTaskCompleted(this, new GetAllMasterTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealTvMoveFinishing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealTvMoveFinishing(int tid) {
            this.Invoke("DealTvMoveFinishing", new object[] {
                        tid});
        }
        
        /// <remarks/>
        public void DealTvMoveFinishingAsync(int tid) {
            this.DealTvMoveFinishingAsync(tid, null);
        }
        
        /// <remarks/>
        public void DealTvMoveFinishingAsync(int tid, object userState) {
            if ((this.DealTvMoveFinishingOperationCompleted == null)) {
                this.DealTvMoveFinishingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealTvMoveFinishingOperationCompleted);
            }
            this.InvokeAsync("DealTvMoveFinishing", new object[] {
                        tid}, this.DealTvMoveFinishingOperationCompleted, userState);
        }
        
        private void OnDealTvMoveFinishingOperationCompleted(object arg) {
            if ((this.DealTvMoveFinishingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealTvMoveFinishingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckSMGAcceptCommad", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckSMGAcceptCommad(int hnmb) {
            object[] results = this.Invoke("CheckSMGAcceptCommad", new object[] {
                        hnmb});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSMGAcceptCommadAsync(int hnmb) {
            this.CheckSMGAcceptCommadAsync(hnmb, null);
        }
        
        /// <remarks/>
        public void CheckSMGAcceptCommadAsync(int hnmb, object userState) {
            if ((this.CheckSMGAcceptCommadOperationCompleted == null)) {
                this.CheckSMGAcceptCommadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSMGAcceptCommadOperationCompleted);
            }
            this.InvokeAsync("CheckSMGAcceptCommad", new object[] {
                        hnmb}, this.CheckSMGAcceptCommadOperationCompleted, userState);
        }
        
        private void OnCheckSMGAcceptCommadOperationCompleted(object arg) {
            if ((this.CheckSMGAcceptCommadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSMGAcceptCommadCompleted(this, new CheckSMGAcceptCommadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCarHallsSpace", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetCarHallsSpace() {
            object[] results = this.Invoke("GetCarHallsSpace", new object[0]);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCarHallsSpaceAsync() {
            this.GetCarHallsSpaceAsync(null);
        }
        
        /// <remarks/>
        public void GetCarHallsSpaceAsync(object userState) {
            if ((this.GetCarHallsSpaceOperationCompleted == null)) {
                this.GetCarHallsSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarHallsSpaceOperationCompleted);
            }
            this.InvokeAsync("GetCarHallsSpace", new object[0], this.GetCarHallsSpaceOperationCompleted, userState);
        }
        
        private void OnGetCarHallsSpaceOperationCompleted(object arg) {
            if ((this.GetCarHallsSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarHallsSpaceCompleted(this, new GetCarHallsSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckMovePathIsBlock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckMovePathIsBlock(int tid) {
            object[] results = this.Invoke("CheckMovePathIsBlock", new object[] {
                        tid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckMovePathIsBlockAsync(int tid) {
            this.CheckMovePathIsBlockAsync(tid, null);
        }
        
        /// <remarks/>
        public void CheckMovePathIsBlockAsync(int tid, object userState) {
            if ((this.CheckMovePathIsBlockOperationCompleted == null)) {
                this.CheckMovePathIsBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMovePathIsBlockOperationCompleted);
            }
            this.InvokeAsync("CheckMovePathIsBlock", new object[] {
                        tid}, this.CheckMovePathIsBlockOperationCompleted, userState);
        }
        
        private void OnCheckMovePathIsBlockOperationCompleted(object arg) {
            if ((this.CheckMovePathIsBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMovePathIsBlockCompleted(this, new CheckMovePathIsBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealEtvAvoid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealEtvAvoid(int tid) {
            this.Invoke("DealEtvAvoid", new object[] {
                        tid});
        }
        
        /// <remarks/>
        public void DealEtvAvoidAsync(int tid) {
            this.DealEtvAvoidAsync(tid, null);
        }
        
        /// <remarks/>
        public void DealEtvAvoidAsync(int tid, object userState) {
            if ((this.DealEtvAvoidOperationCompleted == null)) {
                this.DealEtvAvoidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealEtvAvoidOperationCompleted);
            }
            this.InvokeAsync("DealEtvAvoid", new object[] {
                        tid}, this.DealEtvAvoidOperationCompleted, userState);
        }
        
        private void OnDealEtvAvoidOperationCompleted(object arg) {
            if ((this.DealEtvAvoidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealEtvAvoidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEtvCurrAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEtvCurrAddress() {
            this.Invoke("UpdateEtvCurrAddress", new object[0]);
        }
        
        /// <remarks/>
        public void UpdateEtvCurrAddressAsync() {
            this.UpdateEtvCurrAddressAsync(null);
        }
        
        /// <remarks/>
        public void UpdateEtvCurrAddressAsync(object userState) {
            if ((this.UpdateEtvCurrAddressOperationCompleted == null)) {
                this.UpdateEtvCurrAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEtvCurrAddressOperationCompleted);
            }
            this.InvokeAsync("UpdateEtvCurrAddress", new object[0], this.UpdateEtvCurrAddressOperationCompleted, userState);
        }
        
        private void OnUpdateEtvCurrAddressOperationCompleted(object arg) {
            if ((this.UpdateEtvCurrAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEtvCurrAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InterfaceTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InterfaceTemplate(int hnmb) {
            object[] results = this.Invoke("InterfaceTemplate", new object[] {
                        hnmb});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InterfaceTemplateAsync(int hnmb) {
            this.InterfaceTemplateAsync(hnmb, null);
        }
        
        /// <remarks/>
        public void InterfaceTemplateAsync(int hnmb, object userState) {
            if ((this.InterfaceTemplateOperationCompleted == null)) {
                this.InterfaceTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInterfaceTemplateOperationCompleted);
            }
            this.InvokeAsync("InterfaceTemplate", new object[] {
                        hnmb}, this.InterfaceTemplateOperationCompleted, userState);
        }
        
        private void OnInterfaceTemplateOperationCompleted(object arg) {
            if ((this.InterfaceTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InterfaceTemplateCompleted(this, new InterfaceTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddClient(string client) {
            object[] results = this.Invoke("AddClient", new object[] {
                        client});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddClientAsync(string client) {
            this.AddClientAsync(client, null);
        }
        
        /// <remarks/>
        public void AddClientAsync(string client, object userState) {
            if ((this.AddClientOperationCompleted == null)) {
                this.AddClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClientOperationCompleted);
            }
            this.InvokeAsync("AddClient", new object[] {
                        client}, this.AddClientOperationCompleted, userState);
        }
        
        private void OnAddClientOperationCompleted(object arg) {
            if ((this.AddClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClientCompleted(this, new AddClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveClient(string client) {
            this.Invoke("RemoveClient", new object[] {
                        client});
        }
        
        /// <remarks/>
        public void RemoveClientAsync(string client) {
            this.RemoveClientAsync(client, null);
        }
        
        /// <remarks/>
        public void RemoveClientAsync(string client, object userState) {
            if ((this.RemoveClientOperationCompleted == null)) {
                this.RemoveClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveClientOperationCompleted);
            }
            this.InvokeAsync("RemoveClient", new object[] {
                        client}, this.RemoveClientOperationCompleted, userState);
        }
        
        private void OnRemoveClientOperationCompleted(object arg) {
            if ((this.RemoveClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentSound", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentSound(int hallNum) {
            object[] results = this.Invoke("GetCurrentSound", new object[] {
                        hallNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentSoundAsync(int hallNum) {
            this.GetCurrentSoundAsync(hallNum, null);
        }
        
        /// <remarks/>
        public void GetCurrentSoundAsync(int hallNum, object userState) {
            if ((this.GetCurrentSoundOperationCompleted == null)) {
                this.GetCurrentSoundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentSoundOperationCompleted);
            }
            this.InvokeAsync("GetCurrentSound", new object[] {
                        hallNum}, this.GetCurrentSoundOperationCompleted, userState);
        }
        
        private void OnGetCurrentSoundOperationCompleted(object arg) {
            if ((this.GetCurrentSoundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentSoundCompleted(this, new GetCurrentSoundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealCardMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealCardMessage(int hallID, string physicCard) {
            this.Invoke("DealCardMessage", new object[] {
                        hallID,
                        physicCard});
        }
        
        /// <remarks/>
        public void DealCardMessageAsync(int hallID, string physicCard) {
            this.DealCardMessageAsync(hallID, physicCard, null);
        }
        
        /// <remarks/>
        public void DealCardMessageAsync(int hallID, string physicCard, object userState) {
            if ((this.DealCardMessageOperationCompleted == null)) {
                this.DealCardMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealCardMessageOperationCompleted);
            }
            this.InvokeAsync("DealCardMessage", new object[] {
                        hallID,
                        physicCard}, this.DealCardMessageOperationCompleted, userState);
        }
        
        private void OnDealCardMessageOperationCompleted(object arg) {
            if ((this.DealCardMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealCardMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStatCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateStatCodes(short[] codes) {
            this.Invoke("UpdateStatCodes", new object[] {
                        codes});
        }
        
        /// <remarks/>
        public void UpdateStatCodesAsync(short[] codes) {
            this.UpdateStatCodesAsync(codes, null);
        }
        
        /// <remarks/>
        public void UpdateStatCodesAsync(short[] codes, object userState) {
            if ((this.UpdateStatCodesOperationCompleted == null)) {
                this.UpdateStatCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatCodesOperationCompleted);
            }
            this.InvokeAsync("UpdateStatCodes", new object[] {
                        codes}, this.UpdateStatCodesOperationCompleted, userState);
        }
        
        private void OnUpdateStatCodesOperationCompleted(object arg) {
            if ((this.UpdateStatCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatCodesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateErrorInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateErrorInfo(short[] errAddrs, int scNo) {
            this.Invoke("UpdateErrorInfo", new object[] {
                        errAddrs,
                        scNo});
        }
        
        /// <remarks/>
        public void UpdateErrorInfoAsync(short[] errAddrs, int scNo) {
            this.UpdateErrorInfoAsync(errAddrs, scNo, null);
        }
        
        /// <remarks/>
        public void UpdateErrorInfoAsync(short[] errAddrs, int scNo, object userState) {
            if ((this.UpdateErrorInfoOperationCompleted == null)) {
                this.UpdateErrorInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateErrorInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateErrorInfo", new object[] {
                        errAddrs,
                        scNo}, this.UpdateErrorInfoOperationCompleted, userState);
        }
        
        private void OnUpdateErrorInfoOperationCompleted(object arg) {
            if ((this.UpdateErrorInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateErrorInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMasterTaskFromID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CMasterTask GetMasterTaskFromID(int MID) {
            object[] results = this.Invoke("GetMasterTaskFromID", new object[] {
                        MID});
            return ((CMasterTask)(results[0]));
        }
        
        /// <remarks/>
        public void GetMasterTaskFromIDAsync(int MID) {
            this.GetMasterTaskFromIDAsync(MID, null);
        }
        
        /// <remarks/>
        public void GetMasterTaskFromIDAsync(int MID, object userState) {
            if ((this.GetMasterTaskFromIDOperationCompleted == null)) {
                this.GetMasterTaskFromIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasterTaskFromIDOperationCompleted);
            }
            this.InvokeAsync("GetMasterTaskFromID", new object[] {
                        MID}, this.GetMasterTaskFromIDOperationCompleted, userState);
        }
        
        private void OnGetMasterTaskFromIDOperationCompleted(object arg) {
            if ((this.GetMasterTaskFromIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasterTaskFromIDCompleted(this, new GetMasterTaskFromIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMasterTaskOfTid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CMasterTask GetMasterTaskOfTid(int tskID) {
            object[] results = this.Invoke("GetMasterTaskOfTid", new object[] {
                        tskID});
            return ((CMasterTask)(results[0]));
        }
        
        /// <remarks/>
        public void GetMasterTaskOfTidAsync(int tskID) {
            this.GetMasterTaskOfTidAsync(tskID, null);
        }
        
        /// <remarks/>
        public void GetMasterTaskOfTidAsync(int tskID, object userState) {
            if ((this.GetMasterTaskOfTidOperationCompleted == null)) {
                this.GetMasterTaskOfTidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasterTaskOfTidOperationCompleted);
            }
            this.InvokeAsync("GetMasterTaskOfTid", new object[] {
                        tskID}, this.GetMasterTaskOfTidOperationCompleted, userState);
        }
        
        private void OnGetMasterTaskOfTidOperationCompleted(object arg) {
            if ((this.GetMasterTaskOfTidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasterTaskOfTidCompleted(this, new GetMasterTaskOfTidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectSMG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CSMG SelectSMG(int smg) {
            object[] results = this.Invoke("SelectSMG", new object[] {
                        smg});
            return ((CSMG)(results[0]));
        }
        
        /// <remarks/>
        public void SelectSMGAsync(int smg) {
            this.SelectSMGAsync(smg, null);
        }
        
        /// <remarks/>
        public void SelectSMGAsync(int smg, object userState) {
            if ((this.SelectSMGOperationCompleted == null)) {
                this.SelectSMGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectSMGOperationCompleted);
            }
            this.InvokeAsync("SelectSMG", new object[] {
                        smg}, this.SelectSMGOperationCompleted, userState);
        }
        
        private void OnSelectSMGOperationCompleted(object arg) {
            if ((this.SelectSMGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectSMGCompleted(this, new SelectSMGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTaskFromID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CTask GetCTaskFromID(int id) {
            object[] results = this.Invoke("GetCTaskFromID", new object[] {
                        id});
            return ((CTask)(results[0]));
        }
        
        /// <remarks/>
        public void GetCTaskFromIDAsync(int id) {
            this.GetCTaskFromIDAsync(id, null);
        }
        
        /// <remarks/>
        public void GetCTaskFromIDAsync(int id, object userState) {
            if ((this.GetCTaskFromIDOperationCompleted == null)) {
                this.GetCTaskFromIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTaskFromIDOperationCompleted);
            }
            this.InvokeAsync("GetCTaskFromID", new object[] {
                        id}, this.GetCTaskFromIDOperationCompleted, userState);
        }
        
        private void OnGetCTaskFromIDOperationCompleted(object arg) {
            if ((this.GetCTaskFromIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCTaskFromIDCompleted(this, new GetCTaskFromIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectLctFromAddrs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CLocation SelectLctFromAddrs(string address) {
            object[] results = this.Invoke("SelectLctFromAddrs", new object[] {
                        address});
            return ((CLocation)(results[0]));
        }
        
        /// <remarks/>
        public void SelectLctFromAddrsAsync(string address) {
            this.SelectLctFromAddrsAsync(address, null);
        }
        
        /// <remarks/>
        public void SelectLctFromAddrsAsync(string address, object userState) {
            if ((this.SelectLctFromAddrsOperationCompleted == null)) {
                this.SelectLctFromAddrsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectLctFromAddrsOperationCompleted);
            }
            this.InvokeAsync("SelectLctFromAddrs", new object[] {
                        address}, this.SelectLctFromAddrsOperationCompleted, userState);
        }
        
        private void OnSelectLctFromAddrsOperationCompleted(object arg) {
            if ((this.SelectLctFromAddrsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectLctFromAddrsCompleted(this, new SelectLctFromAddrsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectByUserCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CICCard SelectByUserCode(string code) {
            object[] results = this.Invoke("SelectByUserCode", new object[] {
                        code});
            return ((CICCard)(results[0]));
        }
        
        /// <remarks/>
        public void SelectByUserCodeAsync(string code) {
            this.SelectByUserCodeAsync(code, null);
        }
        
        /// <remarks/>
        public void SelectByUserCodeAsync(string code, object userState) {
            if ((this.SelectByUserCodeOperationCompleted == null)) {
                this.SelectByUserCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectByUserCodeOperationCompleted);
            }
            this.InvokeAsync("SelectByUserCode", new object[] {
                        code}, this.SelectByUserCodeOperationCompleted, userState);
        }
        
        private void OnSelectByUserCodeOperationCompleted(object arg) {
            if ((this.SelectByUserCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectByUserCodeCompleted(this, new SelectByUserCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectSMGsOfType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CSMG[] SelectSMGsOfType(EnmSMGType etype) {
            object[] results = this.Invoke("SelectSMGsOfType", new object[] {
                        etype});
            return ((CSMG[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectSMGsOfTypeAsync(EnmSMGType etype) {
            this.SelectSMGsOfTypeAsync(etype, null);
        }
        
        /// <remarks/>
        public void SelectSMGsOfTypeAsync(EnmSMGType etype, object userState) {
            if ((this.SelectSMGsOfTypeOperationCompleted == null)) {
                this.SelectSMGsOfTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectSMGsOfTypeOperationCompleted);
            }
            this.InvokeAsync("SelectSMGsOfType", new object[] {
                        etype}, this.SelectSMGsOfTypeOperationCompleted, userState);
        }
        
        private void OnSelectSMGsOfTypeOperationCompleted(object arg) {
            if ((this.SelectSMGsOfTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectSMGsOfTypeCompleted(this, new SelectSMGsOfTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSMGStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSMGStatus(int eqp, bool aval, EnmModel emodel) {
            this.Invoke("UpdateSMGStatus", new object[] {
                        eqp,
                        aval,
                        emodel});
        }
        
        /// <remarks/>
        public void UpdateSMGStatusAsync(int eqp, bool aval, EnmModel emodel) {
            this.UpdateSMGStatusAsync(eqp, aval, emodel, null);
        }
        
        /// <remarks/>
        public void UpdateSMGStatusAsync(int eqp, bool aval, EnmModel emodel, object userState) {
            if ((this.UpdateSMGStatusOperationCompleted == null)) {
                this.UpdateSMGStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSMGStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateSMGStatus", new object[] {
                        eqp,
                        aval,
                        emodel}, this.UpdateSMGStatusOperationCompleted, userState);
        }
        
        private void OnUpdateSMGStatusOperationCompleted(object arg) {
            if ((this.UpdateSMGStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSMGStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealCarEntrance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealCarEntrance(int hallID) {
            this.Invoke("DealCarEntrance", new object[] {
                        hallID});
        }
        
        /// <remarks/>
        public void DealCarEntranceAsync(int hallID) {
            this.DealCarEntranceAsync(hallID, null);
        }
        
        /// <remarks/>
        public void DealCarEntranceAsync(int hallID, object userState) {
            if ((this.DealCarEntranceOperationCompleted == null)) {
                this.DealCarEntranceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealCarEntranceOperationCompleted);
            }
            this.InvokeAsync("DealCarEntrance", new object[] {
                        hallID}, this.DealCarEntranceOperationCompleted, userState);
        }
        
        private void OnDealCarEntranceOperationCompleted(object arg) {
            if ((this.DealCarEntranceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealCarEntranceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetTskStatusDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetTskStatusDetail(int tsk, EnmTaskStatusDetail detail, System.DateTime sdtime) {
            this.Invoke("SetTskStatusDetail", new object[] {
                        tsk,
                        detail,
                        sdtime});
        }
        
        /// <remarks/>
        public void SetTskStatusDetailAsync(int tsk, EnmTaskStatusDetail detail, System.DateTime sdtime) {
            this.SetTskStatusDetailAsync(tsk, detail, sdtime, null);
        }
        
        /// <remarks/>
        public void SetTskStatusDetailAsync(int tsk, EnmTaskStatusDetail detail, System.DateTime sdtime, object userState) {
            if ((this.SetTskStatusDetailOperationCompleted == null)) {
                this.SetTskStatusDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTskStatusDetailOperationCompleted);
            }
            this.InvokeAsync("SetTskStatusDetail", new object[] {
                        tsk,
                        detail,
                        sdtime}, this.SetTskStatusDetailOperationCompleted, userState);
        }
        
        private void OnSetTskStatusDetailOperationCompleted(object arg) {
            if ((this.SetTskStatusDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTskStatusDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealUpdateTaskStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealUpdateTaskStatus(EnmTaskStatus estat, int tsk) {
            this.Invoke("DealUpdateTaskStatus", new object[] {
                        estat,
                        tsk});
        }
        
        /// <remarks/>
        public void DealUpdateTaskStatusAsync(EnmTaskStatus estat, int tsk) {
            this.DealUpdateTaskStatusAsync(estat, tsk, null);
        }
        
        /// <remarks/>
        public void DealUpdateTaskStatusAsync(EnmTaskStatus estat, int tsk, object userState) {
            if ((this.DealUpdateTaskStatusOperationCompleted == null)) {
                this.DealUpdateTaskStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealUpdateTaskStatusOperationCompleted);
            }
            this.InvokeAsync("DealUpdateTaskStatus", new object[] {
                        estat,
                        tsk}, this.DealUpdateTaskStatusOperationCompleted, userState);
        }
        
        private void OnDealUpdateTaskStatusOperationCompleted(object arg) {
            if ((this.DealUpdateTaskStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealUpdateTaskStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealCarLeave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealCarLeave(int hallID, int tskID) {
            this.Invoke("DealCarLeave", new object[] {
                        hallID,
                        tskID});
        }
        
        /// <remarks/>
        public void DealCarLeaveAsync(int hallID, int tskID) {
            this.DealCarLeaveAsync(hallID, tskID, null);
        }
        
        /// <remarks/>
        public void DealCarLeaveAsync(int hallID, int tskID, object userState) {
            if ((this.DealCarLeaveOperationCompleted == null)) {
                this.DealCarLeaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealCarLeaveOperationCompleted);
            }
            this.InvokeAsync("DealCarLeave", new object[] {
                        hallID,
                        tskID}, this.DealCarLeaveOperationCompleted, userState);
        }
        
        private void OnDealCarLeaveOperationCompleted(object arg) {
            if ((this.DealCarLeaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealCarLeaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealCheckCarFail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealCheckCarFail(int hallID) {
            this.Invoke("DealCheckCarFail", new object[] {
                        hallID});
        }
        
        /// <remarks/>
        public void DealCheckCarFailAsync(int hallID) {
            this.DealCheckCarFailAsync(hallID, null);
        }
        
        /// <remarks/>
        public void DealCheckCarFailAsync(int hallID, object userState) {
            if ((this.DealCheckCarFailOperationCompleted == null)) {
                this.DealCheckCarFailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealCheckCarFailOperationCompleted);
            }
            this.InvokeAsync("DealCheckCarFail", new object[] {
                        hallID}, this.DealCheckCarFailOperationCompleted, userState);
        }
        
        private void OnDealCheckCarFailOperationCompleted(object arg) {
            if ((this.DealCheckCarFailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealCheckCarFailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealCheckedCar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealCheckedCar(int tskID, int hnmb, string CCheckResult, int distance) {
            this.Invoke("DealCheckedCar", new object[] {
                        tskID,
                        hnmb,
                        CCheckResult,
                        distance});
        }
        
        /// <remarks/>
        public void DealCheckedCarAsync(int tskID, int hnmb, string CCheckResult, int distance) {
            this.DealCheckedCarAsync(tskID, hnmb, CCheckResult, distance, null);
        }
        
        /// <remarks/>
        public void DealCheckedCarAsync(int tskID, int hnmb, string CCheckResult, int distance, object userState) {
            if ((this.DealCheckedCarOperationCompleted == null)) {
                this.DealCheckedCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealCheckedCarOperationCompleted);
            }
            this.InvokeAsync("DealCheckedCar", new object[] {
                        tskID,
                        hnmb,
                        CCheckResult,
                        distance}, this.DealCheckedCarOperationCompleted, userState);
        }
        
        private void OnDealCheckedCarOperationCompleted(object arg) {
            if ((this.DealCheckedCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealCheckedCarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealTVLoadFinishing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealTVLoadFinishing(int tid, int ndist) {
            this.Invoke("DealTVLoadFinishing", new object[] {
                        tid,
                        ndist});
        }
        
        /// <remarks/>
        public void DealTVLoadFinishingAsync(int tid, int ndist) {
            this.DealTVLoadFinishingAsync(tid, ndist, null);
        }
        
        /// <remarks/>
        public void DealTVLoadFinishingAsync(int tid, int ndist, object userState) {
            if ((this.DealTVLoadFinishingOperationCompleted == null)) {
                this.DealTVLoadFinishingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealTVLoadFinishingOperationCompleted);
            }
            this.InvokeAsync("DealTVLoadFinishing", new object[] {
                        tid,
                        ndist}, this.DealTVLoadFinishingOperationCompleted, userState);
        }
        
        private void OnDealTVLoadFinishingOperationCompleted(object arg) {
            if ((this.DealTVLoadFinishingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealTVLoadFinishingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealTVUnLoadFinishing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealTVUnLoadFinishing(int tid, int ndist) {
            this.Invoke("DealTVUnLoadFinishing", new object[] {
                        tid,
                        ndist});
        }
        
        /// <remarks/>
        public void DealTVUnLoadFinishingAsync(int tid, int ndist) {
            this.DealTVUnLoadFinishingAsync(tid, ndist, null);
        }
        
        /// <remarks/>
        public void DealTVUnLoadFinishingAsync(int tid, int ndist, object userState) {
            if ((this.DealTVUnLoadFinishingOperationCompleted == null)) {
                this.DealTVUnLoadFinishingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealTVUnLoadFinishingOperationCompleted);
            }
            this.InvokeAsync("DealTVUnLoadFinishing", new object[] {
                        tid,
                        ndist}, this.DealTVUnLoadFinishingOperationCompleted, userState);
        }
        
        private void OnDealTVUnLoadFinishingOperationCompleted(object arg) {
            if ((this.DealTVUnLoadFinishingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealTVUnLoadFinishingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealCompleteCTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealCompleteCTask(int tskID) {
            this.Invoke("DealCompleteCTask", new object[] {
                        tskID});
        }
        
        /// <remarks/>
        public void DealCompleteCTaskAsync(int tskID) {
            this.DealCompleteCTaskAsync(tskID, null);
        }
        
        /// <remarks/>
        public void DealCompleteCTaskAsync(int tskID, object userState) {
            if ((this.DealCompleteCTaskOperationCompleted == null)) {
                this.DealCompleteCTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealCompleteCTaskOperationCompleted);
            }
            this.InvokeAsync("DealCompleteCTask", new object[] {
                        tskID}, this.DealCompleteCTaskOperationCompleted, userState);
        }
        
        private void OnDealCompleteCTaskOperationCompleted(object arg) {
            if ((this.DealCompleteCTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealCompleteCTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealCompleteTVMoveFinish", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealCompleteTVMoveFinish(int tid) {
            this.Invoke("DealCompleteTVMoveFinish", new object[] {
                        tid});
        }
        
        /// <remarks/>
        public void DealCompleteTVMoveFinishAsync(int tid) {
            this.DealCompleteTVMoveFinishAsync(tid, null);
        }
        
        /// <remarks/>
        public void DealCompleteTVMoveFinishAsync(int tid, object userState) {
            if ((this.DealCompleteTVMoveFinishOperationCompleted == null)) {
                this.DealCompleteTVMoveFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealCompleteTVMoveFinishOperationCompleted);
            }
            this.InvokeAsync("DealCompleteTVMoveFinish", new object[] {
                        tid}, this.DealCompleteTVMoveFinishOperationCompleted, userState);
        }
        
        private void OnDealCompleteTVMoveFinishOperationCompleted(object arg) {
            if ((this.DealCompleteTVMoveFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealCompleteTVMoveFinishCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealCompleteTVLoadFinish", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealCompleteTVLoadFinish(int tid) {
            this.Invoke("DealCompleteTVLoadFinish", new object[] {
                        tid});
        }
        
        /// <remarks/>
        public void DealCompleteTVLoadFinishAsync(int tid) {
            this.DealCompleteTVLoadFinishAsync(tid, null);
        }
        
        /// <remarks/>
        public void DealCompleteTVLoadFinishAsync(int tid, object userState) {
            if ((this.DealCompleteTVLoadFinishOperationCompleted == null)) {
                this.DealCompleteTVLoadFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealCompleteTVLoadFinishOperationCompleted);
            }
            this.InvokeAsync("DealCompleteTVLoadFinish", new object[] {
                        tid}, this.DealCompleteTVLoadFinishOperationCompleted, userState);
        }
        
        private void OnDealCompleteTVLoadFinishOperationCompleted(object arg) {
            if ((this.DealCompleteTVLoadFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealCompleteTVLoadFinishCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ODealEVUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ODealEVUp(int tid) {
            this.Invoke("ODealEVUp", new object[] {
                        tid});
        }
        
        /// <remarks/>
        public void ODealEVUpAsync(int tid) {
            this.ODealEVUpAsync(tid, null);
        }
        
        /// <remarks/>
        public void ODealEVUpAsync(int tid, object userState) {
            if ((this.ODealEVUpOperationCompleted == null)) {
                this.ODealEVUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnODealEVUpOperationCompleted);
            }
            this.InvokeAsync("ODealEVUp", new object[] {
                        tid}, this.ODealEVUpOperationCompleted, userState);
        }
        
        private void OnODealEVUpOperationCompleted(object arg) {
            if ((this.ODealEVUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ODealEVUpCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSMGsWorkStat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSMGsWorkStat() {
            this.Invoke("UpdateSMGsWorkStat", new object[0]);
        }
        
        /// <remarks/>
        public void UpdateSMGsWorkStatAsync() {
            this.UpdateSMGsWorkStatAsync(null);
        }
        
        /// <remarks/>
        public void UpdateSMGsWorkStatAsync(object userState) {
            if ((this.UpdateSMGsWorkStatOperationCompleted == null)) {
                this.UpdateSMGsWorkStatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSMGsWorkStatOperationCompleted);
            }
            this.InvokeAsync("UpdateSMGsWorkStat", new object[0], this.UpdateSMGsWorkStatOperationCompleted, userState);
        }
        
        private void OnUpdateSMGsWorkStatOperationCompleted(object arg) {
            if ((this.UpdateSMGsWorkStatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSMGsWorkStatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWorkingStatOfSMG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateWorkingStatOfSMG(CSMG smg) {
            this.Invoke("UpdateWorkingStatOfSMG", new object[] {
                        smg});
        }
        
        /// <remarks/>
        public void UpdateWorkingStatOfSMGAsync(CSMG smg) {
            this.UpdateWorkingStatOfSMGAsync(smg, null);
        }
        
        /// <remarks/>
        public void UpdateWorkingStatOfSMGAsync(CSMG smg, object userState) {
            if ((this.UpdateWorkingStatOfSMGOperationCompleted == null)) {
                this.UpdateWorkingStatOfSMGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkingStatOfSMGOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkingStatOfSMG", new object[] {
                        smg}, this.UpdateWorkingStatOfSMGOperationCompleted, userState);
        }
        
        private void OnUpdateWorkingStatOfSMGOperationCompleted(object arg) {
            if ((this.UpdateWorkingStatOfSMGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkingStatOfSMGCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMasterTaskOfHid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("mtsks")]
        public CMasterTask[] GetAllMasterTaskOfHid(int hid) {
            object[] results = this.Invoke("GetAllMasterTaskOfHid", new object[] {
                        hid});
            return ((CMasterTask[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMasterTaskOfHidAsync(int hid) {
            this.GetAllMasterTaskOfHidAsync(hid, null);
        }
        
        /// <remarks/>
        public void GetAllMasterTaskOfHidAsync(int hid, object userState) {
            if ((this.GetAllMasterTaskOfHidOperationCompleted == null)) {
                this.GetAllMasterTaskOfHidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMasterTaskOfHidOperationCompleted);
            }
            this.InvokeAsync("GetAllMasterTaskOfHid", new object[] {
                        hid}, this.GetAllMasterTaskOfHidOperationCompleted, userState);
        }
        
        private void OnGetAllMasterTaskOfHidOperationCompleted(object arg) {
            if ((this.GetAllMasterTaskOfHidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMasterTaskOfHidCompleted(this, new GetAllMasterTaskOfHidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public COperator CheckPassword(string code, string pwd) {
            object[] results = this.Invoke("CheckPassword", new object[] {
                        code,
                        pwd});
            return ((COperator)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPasswordAsync(string code, string pwd) {
            this.CheckPasswordAsync(code, pwd, null);
        }
        
        /// <remarks/>
        public void CheckPasswordAsync(string code, string pwd, object userState) {
            if ((this.CheckPasswordOperationCompleted == null)) {
                this.CheckPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPasswordOperationCompleted);
            }
            this.InvokeAsync("CheckPassword", new object[] {
                        code,
                        pwd}, this.CheckPasswordOperationCompleted, userState);
        }
        
        private void OnCheckPasswordOperationCompleted(object arg) {
            if ((this.CheckPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPasswordCompleted(this, new CheckPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectLctofInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SelectLctofInfo(out int ptotal, out int pspace, out int poccupy, out int pfixLct, out int pBigLct) {
            object[] results = this.Invoke("SelectLctofInfo", new object[0]);
            ptotal = ((int)(results[1]));
            pspace = ((int)(results[2]));
            poccupy = ((int)(results[3]));
            pfixLct = ((int)(results[4]));
            pBigLct = ((int)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SelectLctofInfoAsync() {
            this.SelectLctofInfoAsync(null);
        }
        
        /// <remarks/>
        public void SelectLctofInfoAsync(object userState) {
            if ((this.SelectLctofInfoOperationCompleted == null)) {
                this.SelectLctofInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectLctofInfoOperationCompleted);
            }
            this.InvokeAsync("SelectLctofInfo", new object[0], this.SelectLctofInfoOperationCompleted, userState);
        }
        
        private void OnSelectLctofInfoOperationCompleted(object arg) {
            if ((this.SelectLctofInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectLctofInfoCompleted(this, new SelectLctofInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectSpaceLctsAndBigLcts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SelectSpaceLctsAndBigLcts(out int pspace, out int bigspace) {
            object[] results = this.Invoke("SelectSpaceLctsAndBigLcts", new object[0]);
            pspace = ((int)(results[1]));
            bigspace = ((int)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SelectSpaceLctsAndBigLctsAsync() {
            this.SelectSpaceLctsAndBigLctsAsync(null);
        }
        
        /// <remarks/>
        public void SelectSpaceLctsAndBigLctsAsync(object userState) {
            if ((this.SelectSpaceLctsAndBigLctsOperationCompleted == null)) {
                this.SelectSpaceLctsAndBigLctsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectSpaceLctsAndBigLctsOperationCompleted);
            }
            this.InvokeAsync("SelectSpaceLctsAndBigLcts", new object[0], this.SelectSpaceLctsAndBigLctsOperationCompleted, userState);
        }
        
        private void OnSelectSpaceLctsAndBigLctsOperationCompleted(object arg) {
            if ((this.SelectSpaceLctsAndBigLctsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectSpaceLctsAndBigLctsCompleted(this, new SelectSpaceLctsAndBigLctsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpaceLocations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSpaceLocations() {
            object[] results = this.Invoke("GetSpaceLocations", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpaceLocationsAsync() {
            this.GetSpaceLocationsAsync(null);
        }
        
        /// <remarks/>
        public void GetSpaceLocationsAsync(object userState) {
            if ((this.GetSpaceLocationsOperationCompleted == null)) {
                this.GetSpaceLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpaceLocationsOperationCompleted);
            }
            this.InvokeAsync("GetSpaceLocations", new object[0], this.GetSpaceLocationsOperationCompleted, userState);
        }
        
        private void OnGetSpaceLocationsOperationCompleted(object arg) {
            if ((this.GetSpaceLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpaceLocationsCompleted(this, new GetSpaceLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllLocations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CLocation[] SelectAllLocations() {
            object[] results = this.Invoke("SelectAllLocations", new object[0]);
            return ((CLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectAllLocationsAsync() {
            this.SelectAllLocationsAsync(null);
        }
        
        /// <remarks/>
        public void SelectAllLocationsAsync(object userState) {
            if ((this.SelectAllLocationsOperationCompleted == null)) {
                this.SelectAllLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllLocationsOperationCompleted);
            }
            this.InvokeAsync("SelectAllLocations", new object[0], this.SelectAllLocationsOperationCompleted, userState);
        }
        
        private void OnSelectAllLocationsOperationCompleted(object arg) {
            if ((this.SelectAllLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllLocationsCompleted(this, new SelectAllLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectStatusCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CStatCode[] SelectStatusCodes(int smg) {
            object[] results = this.Invoke("SelectStatusCodes", new object[] {
                        smg});
            return ((CStatCode[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectStatusCodesAsync(int smg) {
            this.SelectStatusCodesAsync(smg, null);
        }
        
        /// <remarks/>
        public void SelectStatusCodesAsync(int smg, object userState) {
            if ((this.SelectStatusCodesOperationCompleted == null)) {
                this.SelectStatusCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectStatusCodesOperationCompleted);
            }
            this.InvokeAsync("SelectStatusCodes", new object[] {
                        smg}, this.SelectStatusCodesOperationCompleted, userState);
        }
        
        private void OnSelectStatusCodesOperationCompleted(object arg) {
            if ((this.SelectStatusCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectStatusCodesCompleted(this, new SelectStatusCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMasterTaskCountOfHid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMasterTaskCountOfHid(int hnmb) {
            object[] results = this.Invoke("GetMasterTaskCountOfHid", new object[] {
                        hnmb});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMasterTaskCountOfHidAsync(int hnmb) {
            this.GetMasterTaskCountOfHidAsync(hnmb, null);
        }
        
        /// <remarks/>
        public void GetMasterTaskCountOfHidAsync(int hnmb, object userState) {
            if ((this.GetMasterTaskCountOfHidOperationCompleted == null)) {
                this.GetMasterTaskCountOfHidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMasterTaskCountOfHidOperationCompleted);
            }
            this.InvokeAsync("GetMasterTaskCountOfHid", new object[] {
                        hnmb}, this.GetMasterTaskCountOfHidOperationCompleted, userState);
        }
        
        private void OnGetMasterTaskCountOfHidOperationCompleted(object arg) {
            if ((this.GetMasterTaskCountOfHidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMasterTaskCountOfHidCompleted(this, new GetMasterTaskCountOfHidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentTaskOfSMG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CTask GetCurrentTaskOfSMG(int id) {
            object[] results = this.Invoke("GetCurrentTaskOfSMG", new object[] {
                        id});
            return ((CTask)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentTaskOfSMGAsync(int id) {
            this.GetCurrentTaskOfSMGAsync(id, null);
        }
        
        /// <remarks/>
        public void GetCurrentTaskOfSMGAsync(int id, object userState) {
            if ((this.GetCurrentTaskOfSMGOperationCompleted == null)) {
                this.GetCurrentTaskOfSMGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentTaskOfSMGOperationCompleted);
            }
            this.InvokeAsync("GetCurrentTaskOfSMG", new object[] {
                        id}, this.GetCurrentTaskOfSMGOperationCompleted, userState);
        }
        
        private void OnGetCurrentTaskOfSMGOperationCompleted(object arg) {
            if ((this.GetCurrentTaskOfSMGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentTaskOfSMGCompleted(this, new GetCurrentTaskOfSMGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentMasterTaskOfSMG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CMasterTask GetCurrentMasterTaskOfSMG(int hnmb) {
            object[] results = this.Invoke("GetCurrentMasterTaskOfSMG", new object[] {
                        hnmb});
            return ((CMasterTask)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentMasterTaskOfSMGAsync(int hnmb) {
            this.GetCurrentMasterTaskOfSMGAsync(hnmb, null);
        }
        
        /// <remarks/>
        public void GetCurrentMasterTaskOfSMGAsync(int hnmb, object userState) {
            if ((this.GetCurrentMasterTaskOfSMGOperationCompleted == null)) {
                this.GetCurrentMasterTaskOfSMGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentMasterTaskOfSMGOperationCompleted);
            }
            this.InvokeAsync("GetCurrentMasterTaskOfSMG", new object[] {
                        hnmb}, this.GetCurrentMasterTaskOfSMGOperationCompleted, userState);
        }
        
        private void OnGetCurrentMasterTaskOfSMGOperationCompleted(object arg) {
            if ((this.GetCurrentMasterTaskOfSMGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentMasterTaskOfSMGCompleted(this, new GetCurrentMasterTaskOfSMGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/JudgeEqpHasErrorBit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool JudgeEqpHasErrorBit(int id) {
            object[] results = this.Invoke("JudgeEqpHasErrorBit", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void JudgeEqpHasErrorBitAsync(int id) {
            this.JudgeEqpHasErrorBitAsync(id, null);
        }
        
        /// <remarks/>
        public void JudgeEqpHasErrorBitAsync(int id, object userState) {
            if ((this.JudgeEqpHasErrorBitOperationCompleted == null)) {
                this.JudgeEqpHasErrorBitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJudgeEqpHasErrorBitOperationCompleted);
            }
            this.InvokeAsync("JudgeEqpHasErrorBit", new object[] {
                        id}, this.JudgeEqpHasErrorBitOperationCompleted, userState);
        }
        
        private void OnJudgeEqpHasErrorBitOperationCompleted(object arg) {
            if ((this.JudgeEqpHasErrorBitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JudgeEqpHasErrorBitCompleted(this, new JudgeEqpHasErrorBitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadErrorCodeDescp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CErrorCode[] LoadErrorCodeDescp(int type) {
            object[] results = this.Invoke("LoadErrorCodeDescp", new object[] {
                        type});
            return ((CErrorCode[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadErrorCodeDescpAsync(int type) {
            this.LoadErrorCodeDescpAsync(type, null);
        }
        
        /// <remarks/>
        public void LoadErrorCodeDescpAsync(int type, object userState) {
            if ((this.LoadErrorCodeDescpOperationCompleted == null)) {
                this.LoadErrorCodeDescpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadErrorCodeDescpOperationCompleted);
            }
            this.InvokeAsync("LoadErrorCodeDescp", new object[] {
                        type}, this.LoadErrorCodeDescpOperationCompleted, userState);
        }
        
        private void OnLoadErrorCodeDescpOperationCompleted(object arg) {
            if ((this.LoadErrorCodeDescpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadErrorCodeDescpCompleted(this, new LoadErrorCodeDescpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadErrorsDescp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CErrorCode[] LoadErrorsDescp() {
            object[] results = this.Invoke("LoadErrorsDescp", new object[0]);
            return ((CErrorCode[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadErrorsDescpAsync() {
            this.LoadErrorsDescpAsync(null);
        }
        
        /// <remarks/>
        public void LoadErrorsDescpAsync(object userState) {
            if ((this.LoadErrorsDescpOperationCompleted == null)) {
                this.LoadErrorsDescpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadErrorsDescpOperationCompleted);
            }
            this.InvokeAsync("LoadErrorsDescp", new object[0], this.LoadErrorsDescpOperationCompleted, userState);
        }
        
        private void OnLoadErrorsDescpOperationCompleted(object arg) {
            if ((this.LoadErrorsDescpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadErrorsDescpCompleted(this, new LoadErrorsDescpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectCurrErrCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CErrorCode[] SelectCurrErrCodes() {
            object[] results = this.Invoke("SelectCurrErrCodes", new object[0]);
            return ((CErrorCode[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectCurrErrCodesAsync() {
            this.SelectCurrErrCodesAsync(null);
        }
        
        /// <remarks/>
        public void SelectCurrErrCodesAsync(object userState) {
            if ((this.SelectCurrErrCodesOperationCompleted == null)) {
                this.SelectCurrErrCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCurrErrCodesOperationCompleted);
            }
            this.InvokeAsync("SelectCurrErrCodes", new object[0], this.SelectCurrErrCodesOperationCompleted, userState);
        }
        
        private void OnSelectCurrErrCodesOperationCompleted(object arg) {
            if ((this.SelectCurrErrCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCurrErrCodesCompleted(this, new SelectCurrErrCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetErrorCodesOfEqpID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CErrorCode[] GetErrorCodesOfEqpID(int type) {
            object[] results = this.Invoke("GetErrorCodesOfEqpID", new object[] {
                        type});
            return ((CErrorCode[])(results[0]));
        }
        
        /// <remarks/>
        public void GetErrorCodesOfEqpIDAsync(int type) {
            this.GetErrorCodesOfEqpIDAsync(type, null);
        }
        
        /// <remarks/>
        public void GetErrorCodesOfEqpIDAsync(int type, object userState) {
            if ((this.GetErrorCodesOfEqpIDOperationCompleted == null)) {
                this.GetErrorCodesOfEqpIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetErrorCodesOfEqpIDOperationCompleted);
            }
            this.InvokeAsync("GetErrorCodesOfEqpID", new object[] {
                        type}, this.GetErrorCodesOfEqpIDOperationCompleted, userState);
        }
        
        private void OnGetErrorCodesOfEqpIDOperationCompleted(object arg) {
            if ((this.GetErrorCodesOfEqpIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetErrorCodesOfEqpIDCompleted(this, new GetErrorCodesOfEqpIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateManageMasterTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateManageMasterTask(string FrLct, string ToLct, EnmMasterTaskType mtype, out int hallID) {
            object[] results = this.Invoke("CreateManageMasterTask", new object[] {
                        FrLct,
                        ToLct,
                        mtype});
            hallID = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateManageMasterTaskAsync(string FrLct, string ToLct, EnmMasterTaskType mtype) {
            this.CreateManageMasterTaskAsync(FrLct, ToLct, mtype, null);
        }
        
        /// <remarks/>
        public void CreateManageMasterTaskAsync(string FrLct, string ToLct, EnmMasterTaskType mtype, object userState) {
            if ((this.CreateManageMasterTaskOperationCompleted == null)) {
                this.CreateManageMasterTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateManageMasterTaskOperationCompleted);
            }
            this.InvokeAsync("CreateManageMasterTask", new object[] {
                        FrLct,
                        ToLct,
                        mtype}, this.CreateManageMasterTaskOperationCompleted, userState);
        }
        
        private void OnCreateManageMasterTaskOperationCompleted(object arg) {
            if ((this.CreateManageMasterTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateManageMasterTaskCompleted(this, new CreateManageMasterTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManualCompleteMasterTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ManualCompleteMasterTask(int mid) {
            object[] results = this.Invoke("ManualCompleteMasterTask", new object[] {
                        mid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ManualCompleteMasterTaskAsync(int mid) {
            this.ManualCompleteMasterTaskAsync(mid, null);
        }
        
        /// <remarks/>
        public void ManualCompleteMasterTaskAsync(int mid, object userState) {
            if ((this.ManualCompleteMasterTaskOperationCompleted == null)) {
                this.ManualCompleteMasterTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManualCompleteMasterTaskOperationCompleted);
            }
            this.InvokeAsync("ManualCompleteMasterTask", new object[] {
                        mid}, this.ManualCompleteMasterTaskOperationCompleted, userState);
        }
        
        private void OnManualCompleteMasterTaskOperationCompleted(object arg) {
            if ((this.ManualCompleteMasterTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManualCompleteMasterTaskCompleted(this, new ManualCompleteMasterTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManualResetMasterTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ManualResetMasterTask(int mid) {
            object[] results = this.Invoke("ManualResetMasterTask", new object[] {
                        mid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ManualResetMasterTaskAsync(int mid) {
            this.ManualResetMasterTaskAsync(mid, null);
        }
        
        /// <remarks/>
        public void ManualResetMasterTaskAsync(int mid, object userState) {
            if ((this.ManualResetMasterTaskOperationCompleted == null)) {
                this.ManualResetMasterTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManualResetMasterTaskOperationCompleted);
            }
            this.InvokeAsync("ManualResetMasterTask", new object[] {
                        mid}, this.ManualResetMasterTaskOperationCompleted, userState);
        }
        
        private void OnManualResetMasterTaskOperationCompleted(object arg) {
            if ((this.ManualResetMasterTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManualResetMasterTaskCompleted(this, new ManualResetMasterTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectLocationOfIccd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CLocation SelectLocationOfIccd(string iccode) {
            object[] results = this.Invoke("SelectLocationOfIccd", new object[] {
                        iccode});
            return ((CLocation)(results[0]));
        }
        
        /// <remarks/>
        public void SelectLocationOfIccdAsync(string iccode) {
            this.SelectLocationOfIccdAsync(iccode, null);
        }
        
        /// <remarks/>
        public void SelectLocationOfIccdAsync(string iccode, object userState) {
            if ((this.SelectLocationOfIccdOperationCompleted == null)) {
                this.SelectLocationOfIccdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectLocationOfIccdOperationCompleted);
            }
            this.InvokeAsync("SelectLocationOfIccd", new object[] {
                        iccode}, this.SelectLocationOfIccdOperationCompleted, userState);
        }
        
        private void OnSelectLocationOfIccdOperationCompleted(object arg) {
            if ((this.SelectLocationOfIccdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectLocationOfIccdCompleted(this, new SelectLocationOfIccdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManualOutLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ManualOutLocation(string addrs) {
            object[] results = this.Invoke("ManualOutLocation", new object[] {
                        addrs});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ManualOutLocationAsync(string addrs) {
            this.ManualOutLocationAsync(addrs, null);
        }
        
        /// <remarks/>
        public void ManualOutLocationAsync(string addrs, object userState) {
            if ((this.ManualOutLocationOperationCompleted == null)) {
                this.ManualOutLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManualOutLocationOperationCompleted);
            }
            this.InvokeAsync("ManualOutLocation", new object[] {
                        addrs}, this.ManualOutLocationOperationCompleted, userState);
        }
        
        private void OnManualOutLocationOperationCompleted(object arg) {
            if ((this.ManualOutLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManualOutLocationCompleted(this, new ManualOutLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManualInLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ManualInLocation(string addrs, string iccode, string carSize, int distance, System.DateTime dt) {
            object[] results = this.Invoke("ManualInLocation", new object[] {
                        addrs,
                        iccode,
                        carSize,
                        distance,
                        dt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ManualInLocationAsync(string addrs, string iccode, string carSize, int distance, System.DateTime dt) {
            this.ManualInLocationAsync(addrs, iccode, carSize, distance, dt, null);
        }
        
        /// <remarks/>
        public void ManualInLocationAsync(string addrs, string iccode, string carSize, int distance, System.DateTime dt, object userState) {
            if ((this.ManualInLocationOperationCompleted == null)) {
                this.ManualInLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManualInLocationOperationCompleted);
            }
            this.InvokeAsync("ManualInLocation", new object[] {
                        addrs,
                        iccode,
                        carSize,
                        distance,
                        dt}, this.ManualInLocationOperationCompleted, userState);
        }
        
        private void OnManualInLocationOperationCompleted(object arg) {
            if ((this.ManualInLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManualInLocationCompleted(this, new ManualInLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManualDisLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ManualDisLocation(string addrs) {
            object[] results = this.Invoke("ManualDisLocation", new object[] {
                        addrs});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ManualDisLocationAsync(string addrs) {
            this.ManualDisLocationAsync(addrs, null);
        }
        
        /// <remarks/>
        public void ManualDisLocationAsync(string addrs, object userState) {
            if ((this.ManualDisLocationOperationCompleted == null)) {
                this.ManualDisLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManualDisLocationOperationCompleted);
            }
            this.InvokeAsync("ManualDisLocation", new object[] {
                        addrs}, this.ManualDisLocationOperationCompleted, userState);
        }
        
        private void OnManualDisLocationOperationCompleted(object arg) {
            if ((this.ManualDisLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManualDisLocationCompleted(this, new ManualDisLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManualEnableLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ManualEnableLocation(string addrs) {
            object[] results = this.Invoke("ManualEnableLocation", new object[] {
                        addrs});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ManualEnableLocationAsync(string addrs) {
            this.ManualEnableLocationAsync(addrs, null);
        }
        
        /// <remarks/>
        public void ManualEnableLocationAsync(string addrs, object userState) {
            if ((this.ManualEnableLocationOperationCompleted == null)) {
                this.ManualEnableLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManualEnableLocationOperationCompleted);
            }
            this.InvokeAsync("ManualEnableLocation", new object[] {
                        addrs}, this.ManualEnableLocationOperationCompleted, userState);
        }
        
        private void OnManualEnableLocationOperationCompleted(object arg) {
            if ((this.ManualEnableLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManualEnableLocationCompleted(this, new ManualEnableLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManualTranspose", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ManualTranspose(string fAddrs, string tAddrs) {
            object[] results = this.Invoke("ManualTranspose", new object[] {
                        fAddrs,
                        tAddrs});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ManualTransposeAsync(string fAddrs, string tAddrs) {
            this.ManualTransposeAsync(fAddrs, tAddrs, null);
        }
        
        /// <remarks/>
        public void ManualTransposeAsync(string fAddrs, string tAddrs, object userState) {
            if ((this.ManualTransposeOperationCompleted == null)) {
                this.ManualTransposeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManualTransposeOperationCompleted);
            }
            this.InvokeAsync("ManualTranspose", new object[] {
                        fAddrs,
                        tAddrs}, this.ManualTransposeOperationCompleted, userState);
        }
        
        private void OnManualTransposeOperationCompleted(object arg) {
            if ((this.ManualTransposeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManualTransposeCompleted(this, new ManualTransposeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllSMGs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CSMG[] SelectAllSMGs() {
            object[] results = this.Invoke("SelectAllSMGs", new object[0]);
            return ((CSMG[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectAllSMGsAsync() {
            this.SelectAllSMGsAsync(null);
        }
        
        /// <remarks/>
        public void SelectAllSMGsAsync(object userState) {
            if ((this.SelectAllSMGsOperationCompleted == null)) {
                this.SelectAllSMGsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllSMGsOperationCompleted);
            }
            this.InvokeAsync("SelectAllSMGs", new object[0], this.SelectAllSMGsOperationCompleted, userState);
        }
        
        private void OnSelectAllSMGsOperationCompleted(object arg) {
            if ((this.SelectAllSMGsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllSMGsCompleted(this, new SelectAllSMGsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSMGAvailable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSMGAvailable(int eid, bool avail) {
            object[] results = this.Invoke("UpdateSMGAvailable", new object[] {
                        eid,
                        avail});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSMGAvailableAsync(int eid, bool avail) {
            this.UpdateSMGAvailableAsync(eid, avail, null);
        }
        
        /// <remarks/>
        public void UpdateSMGAvailableAsync(int eid, bool avail, object userState) {
            if ((this.UpdateSMGAvailableOperationCompleted == null)) {
                this.UpdateSMGAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSMGAvailableOperationCompleted);
            }
            this.InvokeAsync("UpdateSMGAvailable", new object[] {
                        eid,
                        avail}, this.UpdateSMGAvailableOperationCompleted, userState);
        }
        
        private void OnUpdateSMGAvailableOperationCompleted(object arg) {
            if ((this.UpdateSMGAvailableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSMGAvailableCompleted(this, new UpdateSMGAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetHallType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetHallType(int hnmb, int idx) {
            object[] results = this.Invoke("SetHallType", new object[] {
                        hnmb,
                        idx});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetHallTypeAsync(int hnmb, int idx) {
            this.SetHallTypeAsync(hnmb, idx, null);
        }
        
        /// <remarks/>
        public void SetHallTypeAsync(int hnmb, int idx, object userState) {
            if ((this.SetHallTypeOperationCompleted == null)) {
                this.SetHallTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetHallTypeOperationCompleted);
            }
            this.InvokeAsync("SetHallType", new object[] {
                        hnmb,
                        idx}, this.SetHallTypeOperationCompleted, userState);
        }
        
        private void OnSetHallTypeOperationCompleted(object arg) {
            if ((this.SetHallTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetHallTypeCompleted(this, new SetHallTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CCustomer[] SelectAllCustomer() {
            object[] results = this.Invoke("SelectAllCustomer", new object[0]);
            return ((CCustomer[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectAllCustomerAsync() {
            this.SelectAllCustomerAsync(null);
        }
        
        /// <remarks/>
        public void SelectAllCustomerAsync(object userState) {
            if ((this.SelectAllCustomerOperationCompleted == null)) {
                this.SelectAllCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllCustomerOperationCompleted);
            }
            this.InvokeAsync("SelectAllCustomer", new object[0], this.SelectAllCustomerOperationCompleted, userState);
        }
        
        private void OnSelectAllCustomerOperationCompleted(object arg) {
            if ((this.SelectAllCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllCustomerCompleted(this, new SelectAllCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFixLocationAvail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckFixLocationAvail(string adrs) {
            object[] results = this.Invoke("CheckFixLocationAvail", new object[] {
                        adrs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFixLocationAvailAsync(string adrs) {
            this.CheckFixLocationAvailAsync(adrs, null);
        }
        
        /// <remarks/>
        public void CheckFixLocationAvailAsync(string adrs, object userState) {
            if ((this.CheckFixLocationAvailOperationCompleted == null)) {
                this.CheckFixLocationAvailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFixLocationAvailOperationCompleted);
            }
            this.InvokeAsync("CheckFixLocationAvail", new object[] {
                        adrs}, this.CheckFixLocationAvailOperationCompleted, userState);
        }
        
        private void OnCheckFixLocationAvailOperationCompleted(object arg) {
            if ((this.CheckFixLocationAvailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFixLocationAvailCompleted(this, new CheckFixLocationAvailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCustomInfo(CCustomer cust, CICCard niccd, string oriCode) {
            object[] results = this.Invoke("UpdateCustomInfo", new object[] {
                        cust,
                        niccd,
                        oriCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomInfoAsync(CCustomer cust, CICCard niccd, string oriCode) {
            this.UpdateCustomInfoAsync(cust, niccd, oriCode, null);
        }
        
        /// <remarks/>
        public void UpdateCustomInfoAsync(CCustomer cust, CICCard niccd, string oriCode, object userState) {
            if ((this.UpdateCustomInfoOperationCompleted == null)) {
                this.UpdateCustomInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomInfo", new object[] {
                        cust,
                        niccd,
                        oriCode}, this.UpdateCustomInfoOperationCompleted, userState);
        }
        
        private void OnUpdateCustomInfoOperationCompleted(object arg) {
            if ((this.UpdateCustomInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomInfoCompleted(this, new UpdateCustomInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertCustomer(CCustomer cut, CICCard iccd) {
            object[] results = this.Invoke("InsertCustomer", new object[] {
                        cut,
                        iccd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCustomerAsync(CCustomer cut, CICCard iccd) {
            this.InsertCustomerAsync(cut, iccd, null);
        }
        
        /// <remarks/>
        public void InsertCustomerAsync(CCustomer cut, CICCard iccd, object userState) {
            if ((this.InsertCustomerOperationCompleted == null)) {
                this.InsertCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCustomerOperationCompleted);
            }
            this.InvokeAsync("InsertCustomer", new object[] {
                        cut,
                        iccd}, this.InsertCustomerOperationCompleted, userState);
        }
        
        private void OnInsertCustomerOperationCompleted(object arg) {
            if ((this.InsertCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCustomerCompleted(this, new InsertCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCustomer(int custID, string ccode) {
            object[] results = this.Invoke("DeleteCustomer", new object[] {
                        custID,
                        ccode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCustomerAsync(int custID, string ccode) {
            this.DeleteCustomerAsync(custID, ccode, null);
        }
        
        /// <remarks/>
        public void DeleteCustomerAsync(int custID, string ccode, object userState) {
            if ((this.DeleteCustomerOperationCompleted == null)) {
                this.DeleteCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCustomerOperationCompleted);
            }
            this.InvokeAsync("DeleteCustomer", new object[] {
                        custID,
                        ccode}, this.DeleteCustomerOperationCompleted, userState);
        }
        
        private void OnDeleteCustomerOperationCompleted(object arg) {
            if ((this.DeleteCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCustomerCompleted(this, new DeleteCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertICCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertICCard(CICCard iccd) {
            object[] results = this.Invoke("InsertICCard", new object[] {
                        iccd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertICCardAsync(CICCard iccd) {
            this.InsertICCardAsync(iccd, null);
        }
        
        /// <remarks/>
        public void InsertICCardAsync(CICCard iccd, object userState) {
            if ((this.InsertICCardOperationCompleted == null)) {
                this.InsertICCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertICCardOperationCompleted);
            }
            this.InvokeAsync("InsertICCard", new object[] {
                        iccd}, this.InsertICCardOperationCompleted, userState);
        }
        
        private void OnInsertICCardOperationCompleted(object arg) {
            if ((this.InsertICCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertICCardCompleted(this, new InsertICCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateICCardStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateICCardStatus(string code, EnmICCardStatus stat) {
            object[] results = this.Invoke("UpdateICCardStatus", new object[] {
                        code,
                        stat});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateICCardStatusAsync(string code, EnmICCardStatus stat) {
            this.UpdateICCardStatusAsync(code, stat, null);
        }
        
        /// <remarks/>
        public void UpdateICCardStatusAsync(string code, EnmICCardStatus stat, object userState) {
            if ((this.UpdateICCardStatusOperationCompleted == null)) {
                this.UpdateICCardStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateICCardStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateICCardStatus", new object[] {
                        code,
                        stat}, this.UpdateICCardStatusOperationCompleted, userState);
        }
        
        private void OnUpdateICCardStatusOperationCompleted(object arg) {
            if ((this.UpdateICCardStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateICCardStatusCompleted(this, new UpdateICCardStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOperatorPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateOperatorPassword(string code, string pwd) {
            object[] results = this.Invoke("UpdateOperatorPassword", new object[] {
                        code,
                        pwd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOperatorPasswordAsync(string code, string pwd) {
            this.UpdateOperatorPasswordAsync(code, pwd, null);
        }
        
        /// <remarks/>
        public void UpdateOperatorPasswordAsync(string code, string pwd, object userState) {
            if ((this.UpdateOperatorPasswordOperationCompleted == null)) {
                this.UpdateOperatorPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperatorPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateOperatorPassword", new object[] {
                        code,
                        pwd}, this.UpdateOperatorPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateOperatorPasswordOperationCompleted(object arg) {
            if ((this.UpdateOperatorPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOperatorPasswordCompleted(this, new UpdateOperatorPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertOperator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertOperator(COperator opr) {
            object[] results = this.Invoke("InsertOperator", new object[] {
                        opr});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOperatorAsync(COperator opr) {
            this.InsertOperatorAsync(opr, null);
        }
        
        /// <remarks/>
        public void InsertOperatorAsync(COperator opr, object userState) {
            if ((this.InsertOperatorOperationCompleted == null)) {
                this.InsertOperatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOperatorOperationCompleted);
            }
            this.InvokeAsync("InsertOperator", new object[] {
                        opr}, this.InsertOperatorOperationCompleted, userState);
        }
        
        private void OnInsertOperatorOperationCompleted(object arg) {
            if ((this.InsertOperatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOperatorCompleted(this, new InsertOperatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllOperators", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public COperator[] SelectAllOperators() {
            object[] results = this.Invoke("SelectAllOperators", new object[0]);
            return ((COperator[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectAllOperatorsAsync() {
            this.SelectAllOperatorsAsync(null);
        }
        
        /// <remarks/>
        public void SelectAllOperatorsAsync(object userState) {
            if ((this.SelectAllOperatorsOperationCompleted == null)) {
                this.SelectAllOperatorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllOperatorsOperationCompleted);
            }
            this.InvokeAsync("SelectAllOperators", new object[0], this.SelectAllOperatorsOperationCompleted, userState);
        }
        
        private void OnSelectAllOperatorsOperationCompleted(object arg) {
            if ((this.SelectAllOperatorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllOperatorsCompleted(this, new SelectAllOperatorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOprt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteOprt(string code) {
            object[] results = this.Invoke("DeleteOprt", new object[] {
                        code});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOprtAsync(string code) {
            this.DeleteOprtAsync(code, null);
        }
        
        /// <remarks/>
        public void DeleteOprtAsync(string code, object userState) {
            if ((this.DeleteOprtOperationCompleted == null)) {
                this.DeleteOprtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOprtOperationCompleted);
            }
            this.InvokeAsync("DeleteOprt", new object[] {
                        code}, this.DeleteOprtOperationCompleted, userState);
        }
        
        private void OnDeleteOprtOperationCompleted(object arg) {
            if ((this.DeleteOprtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOprtCompleted(this, new DeleteOprtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertErrorLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertErrorLog(byte eqp, string descp, System.DateTime dt) {
            object[] results = this.Invoke("InsertErrorLog", new object[] {
                        eqp,
                        descp,
                        dt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertErrorLogAsync(byte eqp, string descp, System.DateTime dt) {
            this.InsertErrorLogAsync(eqp, descp, dt, null);
        }
        
        /// <remarks/>
        public void InsertErrorLogAsync(byte eqp, string descp, System.DateTime dt, object userState) {
            if ((this.InsertErrorLogOperationCompleted == null)) {
                this.InsertErrorLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertErrorLogOperationCompleted);
            }
            this.InvokeAsync("InsertErrorLog", new object[] {
                        eqp,
                        descp,
                        dt}, this.InsertErrorLogOperationCompleted, userState);
        }
        
        private void OnInsertErrorLogOperationCompleted(object arg) {
            if ((this.InsertErrorLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertErrorLogCompleted(this, new InsertErrorLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectSysLogs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SelectSysLogs(System.DateTime start, System.DateTime end, out System.Data.DataTable dt) {
            object[] results = this.Invoke("SelectSysLogs", new object[] {
                        start,
                        end});
            dt = ((System.Data.DataTable)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SelectSysLogsAsync(System.DateTime start, System.DateTime end) {
            this.SelectSysLogsAsync(start, end, null);
        }
        
        /// <remarks/>
        public void SelectSysLogsAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.SelectSysLogsOperationCompleted == null)) {
                this.SelectSysLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectSysLogsOperationCompleted);
            }
            this.InvokeAsync("SelectSysLogs", new object[] {
                        start,
                        end}, this.SelectSysLogsOperationCompleted, userState);
        }
        
        private void OnSelectSysLogsOperationCompleted(object arg) {
            if ((this.SelectSysLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectSysLogsCompleted(this, new SelectSysLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectErrLogs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SelectErrLogs(System.DateTime start, System.DateTime end, out System.Data.DataTable dt) {
            object[] results = this.Invoke("SelectErrLogs", new object[] {
                        start,
                        end});
            dt = ((System.Data.DataTable)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SelectErrLogsAsync(System.DateTime start, System.DateTime end) {
            this.SelectErrLogsAsync(start, end, null);
        }
        
        /// <remarks/>
        public void SelectErrLogsAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.SelectErrLogsOperationCompleted == null)) {
                this.SelectErrLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectErrLogsOperationCompleted);
            }
            this.InvokeAsync("SelectErrLogs", new object[] {
                        start,
                        end}, this.SelectErrLogsOperationCompleted, userState);
        }
        
        private void OnSelectErrLogsOperationCompleted(object arg) {
            if ((this.SelectErrLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectErrLogsCompleted(this, new SelectErrLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteErrorLogs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteErrorLogs(System.DateTime st, System.DateTime end) {
            object[] results = this.Invoke("DeleteErrorLogs", new object[] {
                        st,
                        end});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteErrorLogsAsync(System.DateTime st, System.DateTime end) {
            this.DeleteErrorLogsAsync(st, end, null);
        }
        
        /// <remarks/>
        public void DeleteErrorLogsAsync(System.DateTime st, System.DateTime end, object userState) {
            if ((this.DeleteErrorLogsOperationCompleted == null)) {
                this.DeleteErrorLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteErrorLogsOperationCompleted);
            }
            this.InvokeAsync("DeleteErrorLogs", new object[] {
                        st,
                        end}, this.DeleteErrorLogsOperationCompleted, userState);
        }
        
        private void OnDeleteErrorLogsOperationCompleted(object arg) {
            if ((this.DeleteErrorLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteErrorLogsCompleted(this, new DeleteErrorLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealOTempGetCar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DealOTempGetCar(string iccode, int hallID) {
            object[] results = this.Invoke("DealOTempGetCar", new object[] {
                        iccode,
                        hallID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DealOTempGetCarAsync(string iccode, int hallID) {
            this.DealOTempGetCarAsync(iccode, hallID, null);
        }
        
        /// <remarks/>
        public void DealOTempGetCarAsync(string iccode, int hallID, object userState) {
            if ((this.DealOTempGetCarOperationCompleted == null)) {
                this.DealOTempGetCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealOTempGetCarOperationCompleted);
            }
            this.InvokeAsync("DealOTempGetCar", new object[] {
                        iccode,
                        hallID}, this.DealOTempGetCarOperationCompleted, userState);
        }
        
        private void OnDealOTempGetCarOperationCompleted(object arg) {
            if ((this.DealOTempGetCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealOTempGetCarCompleted(this, new DealOTempGetCarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealCarDriveLeave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DealCarDriveLeave(int tskID) {
            object[] results = this.Invoke("DealCarDriveLeave", new object[] {
                        tskID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DealCarDriveLeaveAsync(int tskID) {
            this.DealCarDriveLeaveAsync(tskID, null);
        }
        
        /// <remarks/>
        public void DealCarDriveLeaveAsync(int tskID, object userState) {
            if ((this.DealCarDriveLeaveOperationCompleted == null)) {
                this.DealCarDriveLeaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealCarDriveLeaveOperationCompleted);
            }
            this.InvokeAsync("DealCarDriveLeave", new object[] {
                        tskID}, this.DealCarDriveLeaveOperationCompleted, userState);
        }
        
        private void OnDealCarDriveLeaveOperationCompleted(object arg) {
            if ((this.DealCarDriveLeaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealCarDriveLeaveCompleted(this, new DealCarDriveLeaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DealCarOffTracing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DealCarOffTracing(int tid) {
            this.Invoke("DealCarOffTracing", new object[] {
                        tid});
        }
        
        /// <remarks/>
        public void DealCarOffTracingAsync(int tid) {
            this.DealCarOffTracingAsync(tid, null);
        }
        
        /// <remarks/>
        public void DealCarOffTracingAsync(int tid, object userState) {
            if ((this.DealCarOffTracingOperationCompleted == null)) {
                this.DealCarOffTracingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDealCarOffTracingOperationCompleted);
            }
            this.InvokeAsync("DealCarOffTracing", new object[] {
                        tid}, this.DealCarOffTracingOperationCompleted, userState);
        }
        
        private void OnDealCarOffTracingOperationCompleted(object arg) {
            if ((this.DealCarOffTracingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DealCarOffTracingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckCarOffTracing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckCarOffTracing(int hnmb) {
            object[] results = this.Invoke("CheckCarOffTracing", new object[] {
                        hnmb});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCarOffTracingAsync(int hnmb) {
            this.CheckCarOffTracingAsync(hnmb, null);
        }
        
        /// <remarks/>
        public void CheckCarOffTracingAsync(int hnmb, object userState) {
            if ((this.CheckCarOffTracingOperationCompleted == null)) {
                this.CheckCarOffTracingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCarOffTracingOperationCompleted);
            }
            this.InvokeAsync("CheckCarOffTracing", new object[] {
                        hnmb}, this.CheckCarOffTracingOperationCompleted, userState);
        }
        
        private void OnCheckCarOffTracingOperationCompleted(object arg) {
            if ((this.CheckCarOffTracingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCarOffTracingCompleted(this, new CheckCarOffTracingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTempCardFeeInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTempCardFeeInfo(string iccode, out CTempCardChargeLog tlog) {
            object[] results = this.Invoke("GetTempCardFeeInfo", new object[] {
                        iccode});
            tlog = ((CTempCardChargeLog)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTempCardFeeInfoAsync(string iccode) {
            this.GetTempCardFeeInfoAsync(iccode, null);
        }
        
        /// <remarks/>
        public void GetTempCardFeeInfoAsync(string iccode, object userState) {
            if ((this.GetTempCardFeeInfoOperationCompleted == null)) {
                this.GetTempCardFeeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTempCardFeeInfoOperationCompleted);
            }
            this.InvokeAsync("GetTempCardFeeInfo", new object[] {
                        iccode}, this.GetTempCardFeeInfoOperationCompleted, userState);
        }
        
        private void OnGetTempCardFeeInfoOperationCompleted(object arg) {
            if ((this.GetTempCardFeeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTempCardFeeInfoCompleted(this, new GetTempCardFeeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFixCardCurrFee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFixCardCurrFee(string iccode, out CFixCardChargeLog log) {
            object[] results = this.Invoke("GetFixCardCurrFee", new object[] {
                        iccode});
            log = ((CFixCardChargeLog)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFixCardCurrFeeAsync(string iccode) {
            this.GetFixCardCurrFeeAsync(iccode, null);
        }
        
        /// <remarks/>
        public void GetFixCardCurrFeeAsync(string iccode, object userState) {
            if ((this.GetFixCardCurrFeeOperationCompleted == null)) {
                this.GetFixCardCurrFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFixCardCurrFeeOperationCompleted);
            }
            this.InvokeAsync("GetFixCardCurrFee", new object[] {
                        iccode}, this.GetFixCardCurrFeeOperationCompleted, userState);
        }
        
        private void OnGetFixCardCurrFeeOperationCompleted(object arg) {
            if ((this.GetFixCardCurrFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFixCardCurrFeeCompleted(this, new GetFixCardCurrFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectTariff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CTariff[] SelectTariff() {
            object[] results = this.Invoke("SelectTariff", new object[0]);
            return ((CTariff[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectTariffAsync() {
            this.SelectTariffAsync(null);
        }
        
        /// <remarks/>
        public void SelectTariffAsync(object userState) {
            if ((this.SelectTariffOperationCompleted == null)) {
                this.SelectTariffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectTariffOperationCompleted);
            }
            this.InvokeAsync("SelectTariff", new object[0], this.SelectTariffOperationCompleted, userState);
        }
        
        private void OnSelectTariffOperationCompleted(object arg) {
            if ((this.SelectTariffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectTariffCompleted(this, new SelectTariffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetFixCardFee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetFixCardFee(CFixCardChargeLog tlog) {
            object[] results = this.Invoke("SetFixCardFee", new object[] {
                        tlog});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetFixCardFeeAsync(CFixCardChargeLog tlog) {
            this.SetFixCardFeeAsync(tlog, null);
        }
        
        /// <remarks/>
        public void SetFixCardFeeAsync(CFixCardChargeLog tlog, object userState) {
            if ((this.SetFixCardFeeOperationCompleted == null)) {
                this.SetFixCardFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFixCardFeeOperationCompleted);
            }
            this.InvokeAsync("SetFixCardFee", new object[] {
                        tlog}, this.SetFixCardFeeOperationCompleted, userState);
        }
        
        private void OnSetFixCardFeeOperationCompleted(object arg) {
            if ((this.SetFixCardFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFixCardFeeCompleted(this, new SetFixCardFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTempCardChargeLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertTempCardChargeLog(CTempCardChargeLog tlog) {
            this.Invoke("InsertTempCardChargeLog", new object[] {
                        tlog});
        }
        
        /// <remarks/>
        public void InsertTempCardChargeLogAsync(CTempCardChargeLog tlog) {
            this.InsertTempCardChargeLogAsync(tlog, null);
        }
        
        /// <remarks/>
        public void InsertTempCardChargeLogAsync(CTempCardChargeLog tlog, object userState) {
            if ((this.InsertTempCardChargeLogOperationCompleted == null)) {
                this.InsertTempCardChargeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTempCardChargeLogOperationCompleted);
            }
            this.InvokeAsync("InsertTempCardChargeLog", new object[] {
                        tlog}, this.InsertTempCardChargeLogOperationCompleted, userState);
        }
        
        private void OnInsertTempCardChargeLogOperationCompleted(object arg) {
            if ((this.InsertTempCardChargeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTempCardChargeLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTariff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteTariff(int tID) {
            object[] results = this.Invoke("DeleteTariff", new object[] {
                        tID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTariffAsync(int tID) {
            this.DeleteTariffAsync(tID, null);
        }
        
        /// <remarks/>
        public void DeleteTariffAsync(int tID, object userState) {
            if ((this.DeleteTariffOperationCompleted == null)) {
                this.DeleteTariffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTariffOperationCompleted);
            }
            this.InvokeAsync("DeleteTariff", new object[] {
                        tID}, this.DeleteTariffOperationCompleted, userState);
        }
        
        private void OnDeleteTariffOperationCompleted(object arg) {
            if ((this.DeleteTariffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTariffCompleted(this, new DeleteTariffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTariff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertTariff(CTariff ctff) {
            object[] results = this.Invoke("InsertTariff", new object[] {
                        ctff});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTariffAsync(CTariff ctff) {
            this.InsertTariffAsync(ctff, null);
        }
        
        /// <remarks/>
        public void InsertTariffAsync(CTariff ctff, object userState) {
            if ((this.InsertTariffOperationCompleted == null)) {
                this.InsertTariffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTariffOperationCompleted);
            }
            this.InvokeAsync("InsertTariff", new object[] {
                        ctff}, this.InsertTariffOperationCompleted, userState);
        }
        
        private void OnInsertTariffOperationCompleted(object arg) {
            if ((this.InsertTariffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTariffCompleted(this, new InsertTariffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTariff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateTariff(CTariff ctff) {
            object[] results = this.Invoke("UpdateTariff", new object[] {
                        ctff});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTariffAsync(CTariff ctff) {
            this.UpdateTariffAsync(ctff, null);
        }
        
        /// <remarks/>
        public void UpdateTariffAsync(CTariff ctff, object userState) {
            if ((this.UpdateTariffOperationCompleted == null)) {
                this.UpdateTariffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTariffOperationCompleted);
            }
            this.InvokeAsync("UpdateTariff", new object[] {
                        ctff}, this.UpdateTariffOperationCompleted, userState);
        }
        
        private void OnUpdateTariffOperationCompleted(object arg) {
            if ((this.UpdateTariffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTariffCompleted(this, new UpdateTariffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectFixCardChargRcds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SelectFixCardChargRcds(int idx, string ctt, System.DateTime st, System.DateTime en, out System.Data.DataTable dt) {
            object[] results = this.Invoke("SelectFixCardChargRcds", new object[] {
                        idx,
                        ctt,
                        st,
                        en});
            dt = ((System.Data.DataTable)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SelectFixCardChargRcdsAsync(int idx, string ctt, System.DateTime st, System.DateTime en) {
            this.SelectFixCardChargRcdsAsync(idx, ctt, st, en, null);
        }
        
        /// <remarks/>
        public void SelectFixCardChargRcdsAsync(int idx, string ctt, System.DateTime st, System.DateTime en, object userState) {
            if ((this.SelectFixCardChargRcdsOperationCompleted == null)) {
                this.SelectFixCardChargRcdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectFixCardChargRcdsOperationCompleted);
            }
            this.InvokeAsync("SelectFixCardChargRcds", new object[] {
                        idx,
                        ctt,
                        st,
                        en}, this.SelectFixCardChargRcdsOperationCompleted, userState);
        }
        
        private void OnSelectFixCardChargRcdsOperationCompleted(object arg) {
            if ((this.SelectFixCardChargRcdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectFixCardChargRcdsCompleted(this, new SelectFixCardChargRcdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CMasterTask {
        
        private int idField;
        
        private CTask[] tasksField;
        
        private EnmMasterTaskType typeField;
        
        private string iCCardCodeField;
        
        private bool isCompletedField;
        
        private bool isTempField;
        
        private int hIDField;
        
        private int wIDField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public CTask[] Tasks {
            get {
                return this.tasksField;
            }
            set {
                this.tasksField = value;
            }
        }
        
        /// <remarks/>
        public EnmMasterTaskType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string ICCardCode {
            get {
                return this.iCCardCodeField;
            }
            set {
                this.iCCardCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCompleted {
            get {
                return this.isCompletedField;
            }
            set {
                this.isCompletedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTemp {
            get {
                return this.isTempField;
            }
            set {
                this.isTempField = value;
            }
        }
        
        /// <remarks/>
        public int HID {
            get {
                return this.hIDField;
            }
            set {
                this.hIDField = value;
            }
        }
        
        /// <remarks/>
        public int WID {
            get {
                return this.wIDField;
            }
            set {
                this.wIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CTask {
        
        private string fromLctAdrsField;
        
        private string toLctAdrsField;
        
        private EnmTaskType typeField;
        
        private EnmTaskStatus statusField;
        
        private EnmTaskStatusDetail statusDetailField;
        
        private System.DateTime createDtimeField;
        
        private System.DateTime sendDtimeField;
        
        private System.DateTime finishDtimeField;
        
        private string iCCardCodeField;
        
        private int idField;
        
        private int hIDField;
        
        private int mIDField;
        
        private int serialField;
        
        private string carSizeField;
        
        private int distanceField;
        
        private int sMGField;
        
        private EnmSMGType sMGTypeField;
        
        /// <remarks/>
        public string FromLctAdrs {
            get {
                return this.fromLctAdrsField;
            }
            set {
                this.fromLctAdrsField = value;
            }
        }
        
        /// <remarks/>
        public string ToLctAdrs {
            get {
                return this.toLctAdrsField;
            }
            set {
                this.toLctAdrsField = value;
            }
        }
        
        /// <remarks/>
        public EnmTaskType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public EnmTaskStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public EnmTaskStatusDetail StatusDetail {
            get {
                return this.statusDetailField;
            }
            set {
                this.statusDetailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDtime {
            get {
                return this.createDtimeField;
            }
            set {
                this.createDtimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SendDtime {
            get {
                return this.sendDtimeField;
            }
            set {
                this.sendDtimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FinishDtime {
            get {
                return this.finishDtimeField;
            }
            set {
                this.finishDtimeField = value;
            }
        }
        
        /// <remarks/>
        public string ICCardCode {
            get {
                return this.iCCardCodeField;
            }
            set {
                this.iCCardCodeField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int HID {
            get {
                return this.hIDField;
            }
            set {
                this.hIDField = value;
            }
        }
        
        /// <remarks/>
        public int MID {
            get {
                return this.mIDField;
            }
            set {
                this.mIDField = value;
            }
        }
        
        /// <remarks/>
        public int Serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        public string CarSize {
            get {
                return this.carSizeField;
            }
            set {
                this.carSizeField = value;
            }
        }
        
        /// <remarks/>
        public int Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public int SMG {
            get {
                return this.sMGField;
            }
            set {
                this.sMGField = value;
            }
        }
        
        /// <remarks/>
        public EnmSMGType SMGType {
            get {
                return this.sMGTypeField;
            }
            set {
                this.sMGTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmTaskType {
        
        /// <remarks/>
        HallCarEntrance,
        
        /// <remarks/>
        HallCarExit,
        
        /// <remarks/>
        TVLoad,
        
        /// <remarks/>
        TVUnload,
        
        /// <remarks/>
        TVTranspose,
        
        /// <remarks/>
        TVMove,
        
        /// <remarks/>
        TVGetCar,
        
        /// <remarks/>
        TVSaveCar,
        
        /// <remarks/>
        SaveCar,
        
        /// <remarks/>
        GetCar,
        
        /// <remarks/>
        Transpose,
        
        /// <remarks/>
        Move,
        
        /// <remarks/>
        TVAvoid,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmTaskStatus {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        ICarInWaitFirstSwipeCard,
        
        /// <remarks/>
        IFirstSwipedWaitforCheckSize,
        
        /// <remarks/>
        ISecondSwipedWaitforCheckSize,
        
        /// <remarks/>
        ISecondSwipedWaitforEVDown,
        
        /// <remarks/>
        ISecondSwipedWaitforCarLeave,
        
        /// <remarks/>
        TWaitforLoad,
        
        /// <remarks/>
        TWaitforUnload,
        
        /// <remarks/>
        UnLoadFinishing,
        
        /// <remarks/>
        OWaitforGetCar,
        
        /// <remarks/>
        OTVLoadWaitforEVDown,
        
        /// <remarks/>
        OEVDownWaitforTVLoad,
        
        /// <remarks/>
        OWaitforEVUp,
        
        /// <remarks/>
        OCarOutWaitforDriveaway,
        
        /// <remarks/>
        Finished,
        
        /// <remarks/>
        ICheckCarFail,
        
        /// <remarks/>
        TMURO,
        
        /// <remarks/>
        TMUROFinished,
        
        /// <remarks/>
        TMURORecoverNocar,
        
        /// <remarks/>
        TMURORecoverHascar,
        
        /// <remarks/>
        OTVLoadingWaitforEV,
        
        /// <remarks/>
        TMUORWaitforUnload,
        
        /// <remarks/>
        OWaitforEVDown,
        
        /// <remarks/>
        TWaitforMove,
        
        /// <remarks/>
        MoveFinishing,
        
        /// <remarks/>
        HallFinishing,
        
        /// <remarks/>
        LoadFinishing,
        
        /// <remarks/>
        IEVDownFinished,
        
        /// <remarks/>
        IEVDownFinishing,
        
        /// <remarks/>
        OEVDownFinishing,
        
        /// <remarks/>
        ICarInWaitPressButton,
        
        /// <remarks/>
        TempOWaitforEVDown,
        
        /// <remarks/>
        TempOEVDownFinishing,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmTaskStatusDetail {
        
        /// <remarks/>
        NoSend,
        
        /// <remarks/>
        SendWaitAsk,
        
        /// <remarks/>
        Asked,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmSMGType {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        Hall,
        
        /// <remarks/>
        ETV,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CTariff {
        
        private bool iSbusyField;
        
        private EnmICCardType typeField;
        
        private int idField;
        
        private EnmFeeUnit unitField;
        
        private EnmFeeType feeTypeField;
        
        private float timeField;
        
        private float feeField;
        
        /// <remarks/>
        public bool ISbusy {
            get {
                return this.iSbusyField;
            }
            set {
                this.iSbusyField = value;
            }
        }
        
        /// <remarks/>
        public EnmICCardType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public EnmFeeUnit Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public EnmFeeType FeeType {
            get {
                return this.feeTypeField;
            }
            set {
                this.feeTypeField = value;
            }
        }
        
        /// <remarks/>
        public float Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public float Fee {
            get {
                return this.feeField;
            }
            set {
                this.feeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmICCardType {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        Temp,
        
        /// <remarks/>
        Fixed,
        
        /// <remarks/>
        FixedLocation,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmFeeUnit {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        Hour,
        
        /// <remarks/>
        Month,
        
        /// <remarks/>
        Season,
        
        /// <remarks/>
        Year,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmFeeType {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        Charging,
        
        /// <remarks/>
        Limited,
        
        /// <remarks/>
        FirstCharge,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CFixCardChargeLog {
        
        private float recivFeeField;
        
        private System.DateTime inDateField;
        
        private string iCCodeField;
        
        private System.DateTime lastDateField;
        
        private System.DateTime thisDateField;
        
        private float thisFeeField;
        
        private float lastFeeField;
        
        private string operatorCodeField;
        
        private EnmICCardType iCTypeField;
        
        private System.DateTime dueDtimeField;
        
        private int feeUnitField;
        
        private string userNameField;
        
        private string iCPCodeField;
        
        /// <remarks/>
        public float RecivFee {
            get {
                return this.recivFeeField;
            }
            set {
                this.recivFeeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InDate {
            get {
                return this.inDateField;
            }
            set {
                this.inDateField = value;
            }
        }
        
        /// <remarks/>
        public string ICCode {
            get {
                return this.iCCodeField;
            }
            set {
                this.iCCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastDate {
            get {
                return this.lastDateField;
            }
            set {
                this.lastDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ThisDate {
            get {
                return this.thisDateField;
            }
            set {
                this.thisDateField = value;
            }
        }
        
        /// <remarks/>
        public float ThisFee {
            get {
                return this.thisFeeField;
            }
            set {
                this.thisFeeField = value;
            }
        }
        
        /// <remarks/>
        public float LastFee {
            get {
                return this.lastFeeField;
            }
            set {
                this.lastFeeField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorCode {
            get {
                return this.operatorCodeField;
            }
            set {
                this.operatorCodeField = value;
            }
        }
        
        /// <remarks/>
        public EnmICCardType ICType {
            get {
                return this.iCTypeField;
            }
            set {
                this.iCTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DueDtime {
            get {
                return this.dueDtimeField;
            }
            set {
                this.dueDtimeField = value;
            }
        }
        
        /// <remarks/>
        public int FeeUnit {
            get {
                return this.feeUnitField;
            }
            set {
                this.feeUnitField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string ICPCode {
            get {
                return this.iCPCodeField;
            }
            set {
                this.iCPCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CTempCardChargeLog {
        
        private string iCCodeField;
        
        private System.DateTime inDateField;
        
        private System.DateTime outDateField;
        
        private float recivFeeField;
        
        private float actualFeeField;
        
        private string operatorCodeField;
        
        private string locationAddressField;
        
        /// <remarks/>
        public string ICCode {
            get {
                return this.iCCodeField;
            }
            set {
                this.iCCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InDate {
            get {
                return this.inDateField;
            }
            set {
                this.inDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OutDate {
            get {
                return this.outDateField;
            }
            set {
                this.outDateField = value;
            }
        }
        
        /// <remarks/>
        public float RecivFee {
            get {
                return this.recivFeeField;
            }
            set {
                this.recivFeeField = value;
            }
        }
        
        /// <remarks/>
        public float ActualFee {
            get {
                return this.actualFeeField;
            }
            set {
                this.actualFeeField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorCode {
            get {
                return this.operatorCodeField;
            }
            set {
                this.operatorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string LocationAddress {
            get {
                return this.locationAddressField;
            }
            set {
                this.locationAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CErrorCode {
        
        private short startBitField;
        
        private byte currentValueField;
        
        private byte typeField;
        
        private byte colorField;
        
        private string descriptionField;
        
        /// <remarks/>
        public short StartBit {
            get {
                return this.startBitField;
            }
            set {
                this.startBitField = value;
            }
        }
        
        /// <remarks/>
        public byte CurrentValue {
            get {
                return this.currentValueField;
            }
            set {
                this.currentValueField = value;
            }
        }
        
        /// <remarks/>
        public byte Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public byte Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CStatCode {
        
        private short startBitField;
        
        private short currentValueField;
        
        /// <remarks/>
        public short StartBit {
            get {
                return this.startBitField;
            }
            set {
                this.startBitField = value;
            }
        }
        
        /// <remarks/>
        public short CurrentValue {
            get {
                return this.currentValueField;
            }
            set {
                this.currentValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CCustomer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(COperator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CICCard))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CSMG))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CObject {
        
        private int idField;
        
        private string codeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CCustomer : CObject {
        
        private string iCCardCodeField;
        
        private EnmICCardType iCCardTypeField;
        
        private string lctAddressField;
        
        private EnmICCardStatus iCCardStatField;
        
        private System.DateTime iccdCdTimeField;
        
        private System.DateTime iCCardDueDateField;
        
        private string addressField;
        
        private string platNumberField;
        
        private string telphoneField;
        
        private string mobileField;
        
        /// <remarks/>
        public string ICCardCode {
            get {
                return this.iCCardCodeField;
            }
            set {
                this.iCCardCodeField = value;
            }
        }
        
        /// <remarks/>
        public EnmICCardType ICCardType {
            get {
                return this.iCCardTypeField;
            }
            set {
                this.iCCardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string LctAddress {
            get {
                return this.lctAddressField;
            }
            set {
                this.lctAddressField = value;
            }
        }
        
        /// <remarks/>
        public EnmICCardStatus ICCardStat {
            get {
                return this.iCCardStatField;
            }
            set {
                this.iCCardStatField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime IccdCdTime {
            get {
                return this.iccdCdTimeField;
            }
            set {
                this.iccdCdTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ICCardDueDate {
            get {
                return this.iCCardDueDateField;
            }
            set {
                this.iCCardDueDateField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string PlatNumber {
            get {
                return this.platNumberField;
            }
            set {
                this.platNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Telphone {
            get {
                return this.telphoneField;
            }
            set {
                this.telphoneField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmICCardStatus {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        Lost,
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Disposed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class COperator : CObject {
        
        private EnmOperatorType typeField;
        
        private string passwordField;
        
        private string nameField;
        
        /// <remarks/>
        public EnmOperatorType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmOperatorType {
        
        /// <remarks/>
        Operator,
        
        /// <remarks/>
        Manager,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CICCard : CObject {
        
        private string physicCodeField;
        
        private EnmICCardType typeField;
        
        private EnmICCardStatus statusField;
        
        private System.DateTime dueDtimeField;
        
        private System.DateTime createDtimeField;
        
        private System.DateTime lossDtimeField;
        
        private System.DateTime disposeDtimeField;
        
        private int customerIDField;
        
        private int oweDaysField;
        
        private string platNumberField;
        
        private string addressField;
        
        /// <remarks/>
        public string PhysicCode {
            get {
                return this.physicCodeField;
            }
            set {
                this.physicCodeField = value;
            }
        }
        
        /// <remarks/>
        public EnmICCardType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public EnmICCardStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DueDtime {
            get {
                return this.dueDtimeField;
            }
            set {
                this.dueDtimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDtime {
            get {
                return this.createDtimeField;
            }
            set {
                this.createDtimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LossDtime {
            get {
                return this.lossDtimeField;
            }
            set {
                this.lossDtimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DisposeDtime {
            get {
                return this.disposeDtimeField;
            }
            set {
                this.disposeDtimeField = value;
            }
        }
        
        /// <remarks/>
        public int CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public int OweDays {
            get {
                return this.oweDaysField;
            }
            set {
                this.oweDaysField = value;
            }
        }
        
        /// <remarks/>
        public string PlatNumber {
            get {
                return this.platNumberField;
            }
            set {
                this.platNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CLocation : CObject {
        
        private EnmLocationType typeField;
        
        private EnmLocationStatus statusField;
        
        private int lineField;
        
        private int listField;
        
        private int layerField;
        
        private string addressField;
        
        private int warehouseField;
        
        private string iCCardCodeField;
        
        private System.DateTime inDateField;
        
        private string sizeField;
        
        private string carSizeField;
        
        private bool isLockedField;
        
        private int distanceField;
        
        private int indexField;
        
        private int isQianxuanField;
        
        private int regionField;
        
        private int priField;
        
        /// <remarks/>
        public EnmLocationType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public EnmLocationStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int Line {
            get {
                return this.lineField;
            }
            set {
                this.lineField = value;
            }
        }
        
        /// <remarks/>
        public int List {
            get {
                return this.listField;
            }
            set {
                this.listField = value;
            }
        }
        
        /// <remarks/>
        public int Layer {
            get {
                return this.layerField;
            }
            set {
                this.layerField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public int Warehouse {
            get {
                return this.warehouseField;
            }
            set {
                this.warehouseField = value;
            }
        }
        
        /// <remarks/>
        public string ICCardCode {
            get {
                return this.iCCardCodeField;
            }
            set {
                this.iCCardCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InDate {
            get {
                return this.inDateField;
            }
            set {
                this.inDateField = value;
            }
        }
        
        /// <remarks/>
        public string Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public string CarSize {
            get {
                return this.carSizeField;
            }
            set {
                this.carSizeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLocked {
            get {
                return this.isLockedField;
            }
            set {
                this.isLockedField = value;
            }
        }
        
        /// <remarks/>
        public int Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public int IsQianxuan {
            get {
                return this.isQianxuanField;
            }
            set {
                this.isQianxuanField = value;
            }
        }
        
        /// <remarks/>
        public int Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public int Pri {
            get {
                return this.priField;
            }
            set {
                this.priField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmLocationType {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Hall,
        
        /// <remarks/>
        Disable,
        
        /// <remarks/>
        ETV,
        
        /// <remarks/>
        Invalid,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmLocationStatus {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        Space,
        
        /// <remarks/>
        Occupy,
        
        /// <remarks/>
        Entering,
        
        /// <remarks/>
        Outing,
        
        /// <remarks/>
        Temping,
        
        /// <remarks/>
        Idleness,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CSMG : CObject {
        
        private bool availableField;
        
        private EnmModel modelField;
        
        private int warehouseField;
        
        private int nIsWorkingField;
        
        private string addressField;
        
        private int layerField;
        
        private int regionField;
        
        private int taskCountField;
        
        private EnmHallType hallTypeField;
        
        private EnmSMGType sMGTypeField;
        
        private int mTskIDField;
        
        private int nextTaskIdField;
        
        private string currAddressField;
        
        /// <remarks/>
        public bool Available {
            get {
                return this.availableField;
            }
            set {
                this.availableField = value;
            }
        }
        
        /// <remarks/>
        public EnmModel Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public int Warehouse {
            get {
                return this.warehouseField;
            }
            set {
                this.warehouseField = value;
            }
        }
        
        /// <remarks/>
        public int nIsWorking {
            get {
                return this.nIsWorkingField;
            }
            set {
                this.nIsWorkingField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public int Layer {
            get {
                return this.layerField;
            }
            set {
                this.layerField = value;
            }
        }
        
        /// <remarks/>
        public int Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public int TaskCount {
            get {
                return this.taskCountField;
            }
            set {
                this.taskCountField = value;
            }
        }
        
        /// <remarks/>
        public EnmHallType HallType {
            get {
                return this.hallTypeField;
            }
            set {
                this.hallTypeField = value;
            }
        }
        
        /// <remarks/>
        public EnmSMGType SMGType {
            get {
                return this.sMGTypeField;
            }
            set {
                this.sMGTypeField = value;
            }
        }
        
        /// <remarks/>
        public int MTskID {
            get {
                return this.mTskIDField;
            }
            set {
                this.mTskIDField = value;
            }
        }
        
        /// <remarks/>
        public int NextTaskId {
            get {
                return this.nextTaskIdField;
            }
            set {
                this.nextTaskIdField = value;
            }
        }
        
        /// <remarks/>
        public string CurrAddress {
            get {
                return this.currAddressField;
            }
            set {
                this.currAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmModel {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        AutoPending,
        
        /// <remarks/>
        AutoAligning,
        
        /// <remarks/>
        AutoStopped,
        
        /// <remarks/>
        AutoStarting,
        
        /// <remarks/>
        AutoStarted,
        
        /// <remarks/>
        AutoStopping,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmHallType {
        
        /// <remarks/>
        Init,
        
        /// <remarks/>
        Entance,
        
        /// <remarks/>
        Exit,
        
        /// <remarks/>
        EnterorExit,
        
        /// <remarks/>
        ManageHouse,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum EnmMasterTaskType {
        
        /// <remarks/>
        SaveCar,
        
        /// <remarks/>
        GetCar,
        
        /// <remarks/>
        Transpose,
        
        /// <remarks/>
        Move,
        
        /// <remarks/>
        TempGetCar,
        
        /// <remarks/>
        Avoid,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectTempCardChargRcdsCompletedEventHandler(object sender, SelectTempCardChargRcdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectTempCardChargRcdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectTempCardChargRcdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateTempICcardOutCompletedEventHandler(object sender, CreateTempICcardOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTempICcardOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTempICcardOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int hnmb {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAllMasterTaskCompletedEventHandler(object sender, GetAllMasterTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMasterTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMasterTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CMasterTask[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CMasterTask[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealTvMoveFinishingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CheckSMGAcceptCommadCompletedEventHandler(object sender, CheckSMGAcceptCommadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSMGAcceptCommadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSMGAcceptCommadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCarHallsSpaceCompletedEventHandler(object sender, GetCarHallsSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarHallsSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarHallsSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CheckMovePathIsBlockCompletedEventHandler(object sender, CheckMovePathIsBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMovePathIsBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMovePathIsBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealEtvAvoidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateEtvCurrAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InterfaceTemplateCompletedEventHandler(object sender, InterfaceTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InterfaceTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InterfaceTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddClientCompletedEventHandler(object sender, AddClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void RemoveClientCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCurrentSoundCompletedEventHandler(object sender, GetCurrentSoundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentSoundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentSoundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealCardMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateStatCodesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateErrorInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetMasterTaskFromIDCompletedEventHandler(object sender, GetMasterTaskFromIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasterTaskFromIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasterTaskFromIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CMasterTask Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CMasterTask)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetMasterTaskOfTidCompletedEventHandler(object sender, GetMasterTaskOfTidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasterTaskOfTidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasterTaskOfTidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CMasterTask Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CMasterTask)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectSMGCompletedEventHandler(object sender, SelectSMGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectSMGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectSMGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CSMG Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CSMG)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCTaskFromIDCompletedEventHandler(object sender, GetCTaskFromIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCTaskFromIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCTaskFromIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CTask Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CTask)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectLctFromAddrsCompletedEventHandler(object sender, SelectLctFromAddrsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectLctFromAddrsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectLctFromAddrsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CLocation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CLocation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectByUserCodeCompletedEventHandler(object sender, SelectByUserCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectByUserCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectByUserCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CICCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CICCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectSMGsOfTypeCompletedEventHandler(object sender, SelectSMGsOfTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectSMGsOfTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectSMGsOfTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CSMG[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CSMG[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateSMGStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealCarEntranceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SetTskStatusDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealUpdateTaskStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealCarLeaveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealCheckCarFailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealCheckedCarCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealTVLoadFinishingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealTVUnLoadFinishingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealCompleteCTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealCompleteTVMoveFinishCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealCompleteTVLoadFinishCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ODealEVUpCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateSMGsWorkStatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateWorkingStatOfSMGCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAllMasterTaskOfHidCompletedEventHandler(object sender, GetAllMasterTaskOfHidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMasterTaskOfHidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMasterTaskOfHidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CMasterTask[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CMasterTask[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CheckPasswordCompletedEventHandler(object sender, CheckPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public COperator Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((COperator)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectLctofInfoCompletedEventHandler(object sender, SelectLctofInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectLctofInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectLctofInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int ptotal {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int pspace {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int poccupy {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public int pfixLct {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public int pBigLct {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectSpaceLctsAndBigLctsCompletedEventHandler(object sender, SelectSpaceLctsAndBigLctsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectSpaceLctsAndBigLctsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectSpaceLctsAndBigLctsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int pspace {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int bigspace {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetSpaceLocationsCompletedEventHandler(object sender, GetSpaceLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpaceLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpaceLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectAllLocationsCompletedEventHandler(object sender, SelectAllLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAllLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAllLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectStatusCodesCompletedEventHandler(object sender, SelectStatusCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectStatusCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectStatusCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CStatCode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CStatCode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetMasterTaskCountOfHidCompletedEventHandler(object sender, GetMasterTaskCountOfHidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMasterTaskCountOfHidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMasterTaskCountOfHidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCurrentTaskOfSMGCompletedEventHandler(object sender, GetCurrentTaskOfSMGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentTaskOfSMGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentTaskOfSMGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CTask Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CTask)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCurrentMasterTaskOfSMGCompletedEventHandler(object sender, GetCurrentMasterTaskOfSMGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentMasterTaskOfSMGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentMasterTaskOfSMGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CMasterTask Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CMasterTask)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void JudgeEqpHasErrorBitCompletedEventHandler(object sender, JudgeEqpHasErrorBitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JudgeEqpHasErrorBitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JudgeEqpHasErrorBitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LoadErrorCodeDescpCompletedEventHandler(object sender, LoadErrorCodeDescpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadErrorCodeDescpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadErrorCodeDescpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CErrorCode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CErrorCode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LoadErrorsDescpCompletedEventHandler(object sender, LoadErrorsDescpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadErrorsDescpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadErrorsDescpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CErrorCode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CErrorCode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectCurrErrCodesCompletedEventHandler(object sender, SelectCurrErrCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCurrErrCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCurrErrCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CErrorCode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CErrorCode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetErrorCodesOfEqpIDCompletedEventHandler(object sender, GetErrorCodesOfEqpIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetErrorCodesOfEqpIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetErrorCodesOfEqpIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CErrorCode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CErrorCode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateManageMasterTaskCompletedEventHandler(object sender, CreateManageMasterTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateManageMasterTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateManageMasterTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int hallID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ManualCompleteMasterTaskCompletedEventHandler(object sender, ManualCompleteMasterTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManualCompleteMasterTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManualCompleteMasterTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ManualResetMasterTaskCompletedEventHandler(object sender, ManualResetMasterTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManualResetMasterTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManualResetMasterTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectLocationOfIccdCompletedEventHandler(object sender, SelectLocationOfIccdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectLocationOfIccdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectLocationOfIccdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CLocation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CLocation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ManualOutLocationCompletedEventHandler(object sender, ManualOutLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManualOutLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManualOutLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ManualInLocationCompletedEventHandler(object sender, ManualInLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManualInLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManualInLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ManualDisLocationCompletedEventHandler(object sender, ManualDisLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManualDisLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManualDisLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ManualEnableLocationCompletedEventHandler(object sender, ManualEnableLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManualEnableLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManualEnableLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ManualTransposeCompletedEventHandler(object sender, ManualTransposeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManualTransposeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManualTransposeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectAllSMGsCompletedEventHandler(object sender, SelectAllSMGsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAllSMGsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAllSMGsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CSMG[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CSMG[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateSMGAvailableCompletedEventHandler(object sender, UpdateSMGAvailableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSMGAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSMGAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SetHallTypeCompletedEventHandler(object sender, SetHallTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetHallTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetHallTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectAllCustomerCompletedEventHandler(object sender, SelectAllCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAllCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAllCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CCustomer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CCustomer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CheckFixLocationAvailCompletedEventHandler(object sender, CheckFixLocationAvailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFixLocationAvailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFixLocationAvailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateCustomInfoCompletedEventHandler(object sender, UpdateCustomInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InsertCustomerCompletedEventHandler(object sender, InsertCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteCustomerCompletedEventHandler(object sender, DeleteCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InsertICCardCompletedEventHandler(object sender, InsertICCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertICCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertICCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateICCardStatusCompletedEventHandler(object sender, UpdateICCardStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateICCardStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateICCardStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateOperatorPasswordCompletedEventHandler(object sender, UpdateOperatorPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOperatorPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOperatorPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InsertOperatorCompletedEventHandler(object sender, InsertOperatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOperatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOperatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectAllOperatorsCompletedEventHandler(object sender, SelectAllOperatorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAllOperatorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAllOperatorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public COperator[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((COperator[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteOprtCompletedEventHandler(object sender, DeleteOprtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOprtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOprtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InsertErrorLogCompletedEventHandler(object sender, InsertErrorLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertErrorLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertErrorLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectSysLogsCompletedEventHandler(object sender, SelectSysLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectSysLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectSysLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectErrLogsCompletedEventHandler(object sender, SelectErrLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectErrLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectErrLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteErrorLogsCompletedEventHandler(object sender, DeleteErrorLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteErrorLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteErrorLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealOTempGetCarCompletedEventHandler(object sender, DealOTempGetCarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DealOTempGetCarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DealOTempGetCarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealCarDriveLeaveCompletedEventHandler(object sender, DealCarDriveLeaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DealCarDriveLeaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DealCarDriveLeaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DealCarOffTracingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CheckCarOffTracingCompletedEventHandler(object sender, CheckCarOffTracingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCarOffTracingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCarOffTracingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetTempCardFeeInfoCompletedEventHandler(object sender, GetTempCardFeeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTempCardFeeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTempCardFeeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CTempCardChargeLog tlog {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CTempCardChargeLog)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetFixCardCurrFeeCompletedEventHandler(object sender, GetFixCardCurrFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFixCardCurrFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFixCardCurrFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CFixCardChargeLog log {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CFixCardChargeLog)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectTariffCompletedEventHandler(object sender, SelectTariffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectTariffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectTariffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CTariff[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CTariff[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SetFixCardFeeCompletedEventHandler(object sender, SetFixCardFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFixCardFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFixCardFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InsertTempCardChargeLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteTariffCompletedEventHandler(object sender, DeleteTariffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTariffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTariffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InsertTariffCompletedEventHandler(object sender, InsertTariffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTariffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTariffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateTariffCompletedEventHandler(object sender, UpdateTariffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTariffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTariffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SelectFixCardChargRcdsCompletedEventHandler(object sender, SelectFixCardChargRcdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectFixCardChargRcdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectFixCardChargRcdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591